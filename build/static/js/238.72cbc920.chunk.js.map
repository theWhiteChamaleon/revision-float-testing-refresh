{"version":3,"file":"static/js/238.72cbc920.chunk.js","mappings":"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","sources":["WidgetLifecycle.jsx","services/api/refreshService.js","components/Button/Button.jsx","components/List/List.jsx","components/Card/Card.jsx","components/DragAndDrop/DragAndDropStandAlone.jsx","components/Card/cardwithdraganddrop.jsx","components/SearchInput/SearchInput.jsx","hooks/useInterComSearch.js","components/DragAndDrop/DragAndDrop.jsx","components/Loader/Loader.js","components/Table/Table.jsx","hooks/useDroppableArea.js","hooks/useRevisions.js","hooks/useToast.js","services/api/droppableService.js","store/droppedObjectSlice.js","store/index.js","utils/api.js","utils/helpers.js","utils/toastMessages.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\"; // Import refresh\r\nimport useToast from \"./hooks/useToast\"; // Import useToast\r\nimport useDroppableArea from \"./hooks/useDroppableArea\"; // Import useDroppableArea\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomButton from \"./components/Button/Button\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  // Receives children\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const initialDraggedData = useSelector((state) => {\r\n    return state.droppedObject.droppedObjectData.initialDraggedData;\r\n  });\r\n\r\n  const handleClick = async () => {\r\n    if (\r\n      initialDraggedData && \r\n      initialDraggedData.data.items[0].objectId &&\r\n      initialDraggedData.data.items[0].objectType &&\r\n      typeof handleDrop === \"function\"\r\n    ) {\r\n      try {\r\n        const dataItems = initialDraggedData.data.items;\r\n        await refreshWidgetData(dataItems, handleDrop);\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      } catch (error) {\r\n        console.error(\"Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      }\r\n    } else {\r\n      console.error(\"[onRefresh] initialDraggedData is undefined\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      {/* <button onClick={handleClick}>Refresh</button> */}\r\n      <CustomButton\r\n        variant=\"outline-secondary\"\r\n        className=\"m-2\"\r\n        size=\"lg\"\r\n        text=\"Refresh\"\r\n        onClick={handleClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","export const refreshWidgetData = async (dataItems, handleDrop) => {\r\n  console.log(\"[refreshWidgetData] called with dataItems:\", dataItems);\r\n  if (!dataItems || dataItems.length === 0) {\r\n    console.warn(\"[Refresh] No dropped data available to refresh.\");\r\n    return;\r\n  }\r\n  try {\r\n    if (typeof handleDrop !== \"function\") {\r\n      throw new Error(\"[Refresh] handleDrop is not a function.\");\r\n    }\r\n    await handleDrop(dataItems);\r\n  } catch (error) {\r\n    console.error(\"[Refresh] Error during handleDrop execution:\", error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./List.css\";\r\nimport { makeDraggable } from \"../../utils/helpers\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst List = ({ data, isColumn, onDragStart, onDragEnd }) => {\r\n  const titleRef = useRef(null);\r\n  const initialDraggedData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData.initialDraggedData\r\n  );\r\n \r\n  // console.log(\"initialDraggedData here\", initialDraggedData);\r\n  useEffect(() => {\r\n    if (titleRef.current && initialDraggedData) {\r\n      makeDraggable(\r\n        titleRef.current,\r\n        initialDraggedData,\r\n        onDragStart,\r\n        onDragEnd\r\n      );\r\n    }\r\n  }, [data, initialDraggedData, onDragStart, onDragEnd]);\r\n\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <div className={`d-flex ${isColumn ? \"flex-column\" : \"flex-row\"}`}>\r\n      <h5\r\n        ref={titleRef}\r\n        className={`mb-1 text-start title ${!isColumn ? \"me-2\" : \"\"}`}\r\n      >\r\n        {data.title}\r\n      </h5>\r\n      <ul\r\n        className={`list-group d-flex flex-row flex-sm-row flex-wrap justify-content-between pb-3 pb-md-0 ${\r\n          !isColumn ? \"w-75\" : \"\"\r\n        }`}\r\n      >\r\n        <li\r\n          className={`list-group-item flex-grow-1 text-start mx-0 ps-0 ${\r\n            !isColumn && \"d-flex flex-row justify-content-around\"\r\n          }`}\r\n          style={{ border: \"0\" }}\r\n        >\r\n          <p>\r\n            <b>Type:</b>{\" \"}\r\n            <span className=\"list-text\" title={data.type}>\r\n              {data.type}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <b>Owner:</b>{\" \"}\r\n            <span className=\"list-text\" title={data.owner}>\r\n              {data.owner}\r\n            </span>\r\n          </p>\r\n          {isColumn && (\r\n            <p>\r\n              <b>Maturity State:</b>{\" \"}\r\n              <span className=\"list-text\" title={data[\"Maturity State\"]}>\r\n                {data[\"Maturity State\"]}\r\n              </span>\r\n            </p>\r\n          )}\r\n        </li>\r\n        {isColumn && (\r\n          <li\r\n            className={`list-group-item flex-grow-1 text-start mx-0  ${\r\n              !isColumn && \"d-flex flex-row\"\r\n            }`}\r\n            style={{ border: \"0\", paddingLeft: \"0\" }}\r\n          >\r\n            <p>\r\n              <b>Dropped Revision :</b>{\" \"}\r\n              <span className=\"list-text\" title={data[\"Dropped Revision\"]}>\r\n                {data[\"Dropped Revision\"]}\r\n              </span>\r\n            </p>\r\n\r\n            <p>\r\n              <b>Latest Released Revision:</b>{\" \"}\r\n              <span\r\n                className=\"list-text\"\r\n                title={data[\"Latest Released Revision\"]}\r\n              >\r\n                {data[\"Latest Released Revision\"]}\r\n              </span>\r\n            </p>\r\n\r\n            <p>\r\n              <b>Collabspace:</b>{\" \"}\r\n              <span\r\n                className=\"list-text\"\r\n                title={data[\"Collaborative Space Title\"]}\r\n              >\r\n                {data[\"Collaborative Space Title\"]}\r\n              </span>\r\n            </p>\r\n          </li>\r\n        )}\r\n        <li\r\n          className={`list-group-item flex-grow-1 text-start mx-0 ${\r\n            !isColumn && \"d-flex flex-row\"\r\n          }`}\r\n          style={{ border: \"0\", paddingLeft: \"0\" }}\r\n        >\r\n          {/* Conditionally render CAD Format */}\r\n          {data.type !== \"Document\" && (\r\n            <p>\r\n              <b>CAD Format:</b>{\" \"}\r\n              <span className=\"list-text\" title={data[\"CAD Format\"]}>\r\n                {data[\"CAD Format\"]}\r\n              </span>\r\n            </p>\r\n          )}\r\n          {/* Conditionally render EIN */}\r\n          {data.type !== \"Document\" && (\r\n            <p>\r\n              <b>EIN:</b>{\" \"}\r\n              <span className=\"list-text\" title={data.EIN}>\r\n                {data.EIN}\r\n              </span>\r\n            </p>\r\n          )}\r\n        </li>\r\n\r\n        <div className=\"d-none d-md-block\">\r\n          <div className=\"vr\" style={{ height: \"100%\" }}></div>\r\n        </div>\r\n\r\n        <div className=\"d-md-none w-100\">\r\n          <hr />\r\n        </div>\r\n        <li\r\n          className={`list-group-item flex-grow-1 text-start mx-0 ${\r\n            !isColumn && \"d-flex flex-row\"\r\n          }`}\r\n          style={{ border: \"0\" }}\r\n        >\r\n          <p className=\"description-container\" title={data.Description}>\r\n            {data.Description}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Image, Card, CardBody } from \"react-bootstrap\";\r\nimport List from \"../List/List\";\r\n\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CardComponent = ({ data, onDragStart, onDragEnd }) => {\r\n  const [isColumn, setIsColumn] = useState(true);\r\n\r\n  const toggleFlexDirection = () => {\r\n    setIsColumn(!isColumn);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"d-flex flex-row mt-4 border-0 \" style={{ width: \"100%\" }}>\r\n      <div className=\"pb-3 d-none d-md-block me-5 ms-4\">\r\n        <Card.Img\r\n          className={`${\r\n            !isColumn ? \"image-resize img-thumbnail\" : \"img-thumbnail\"\r\n          } `}\r\n          src={data.imageURL} // Use dynamic image URL from data\r\n          alt=\"Card image\"\r\n        />\r\n      </div>\r\n      <CardBody className={`${!isColumn ? \"p-0 layout-change\" : \"p-0\"} `}>\r\n        <List\r\n          data={data}\r\n          isColumn={isColumn}\r\n          onDragStart={onDragStart}\r\n          onDragEnd={onDragEnd}\r\n        />\r\n      </CardBody>\r\n      <button\r\n        className=\"me-2 p-0 btn btn-link accordion-toggle\"\r\n        onClick={toggleFlexDirection}\r\n      >\r\n        {/* <FontAwesomeIcon\r\n          icon={faAngleUp}\r\n          size=\"xs\"\r\n          style={{ color: \"#212121\" }}\r\n          className={`rotatable ${isColumn ? \"rotated\" : \"\"}`}\r\n        /> */}\r\n\r\n        <Image\r\n          src=\"https://khanfarzan17.github.io/tedting-revision-float/images/arrow.png\"\r\n          alt=\"downArrow\"\r\n          className={`rotatable ${isColumn ? \"rotated\" : \"\"}`}\r\n        />\r\n      </button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropStandAlone = () => {\r\n  const { isDropped } = useDroppableArea();\r\n  return (\r\n    <>\r\n      <div\r\n        className={`droppable-container mt-4 ${\r\n          isDropped ? \"dropped-active\" : \"\"\r\n        }`}\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropStandAlone;\r\n","import React, { useState } from \"react\";\r\nimport DragAndDropStandAlone from \"../DragAndDrop/DragAndDropStandAlone\";\r\nimport CardComponent from \"./Card\";\r\n\r\nconst CardWithDragAndDrop = ({ data }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const handleDragStart = () => {\r\n    console.log(\"handleDragStart called\"); \r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    console.log(\"handleDragEnd called\"); \r\n    console.log(\"Before setIsDragging(false) - isDragging:\", isDragging); \r\n    setIsDragging(false);\r\n    console.log(\"After setIsDragging(false) - isDragging:\", isDragging);\r\n  };\r\n  return (\r\n    <div className={`card-with-drag-and-drop ${isDragging ? \"dragging\" : \"\"}`}>\r\n      <DragAndDropStandAlone />\r\n      <CardComponent\r\n        data={data}\r\n        onDragStart={handleDragStart}\r\n        onDragEnd={handleDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardWithDragAndDrop;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Image, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport \"./SearchInput.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchInput = ({ onSearch, disabled }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newSearchText = event.target.value;\r\n    setSearchText(newSearchText);\r\n  };\r\n\r\n  const handleInputKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setSearchText(\"\");\r\n    inputRef.current.focus(); // Keep focus on the input after clearing\r\n  };\r\n  const handleSearchIconClick = () => {\r\n    if (searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-content-container d-flex align-items-center\">\r\n      <FontAwesomeIcon\r\n        icon={faMagnifyingGlass}\r\n        onClick={handleSearchIconClick}\r\n        style={{ width: \"40px\", height: \"40px\", cursor: \"pointer\" }}\r\n      />\r\n      {/* <Image\r\n        onClick={handleSearchIconClick}\r\n        style={{ width: \"40px\", height: \"40px\", cursor: \"pointer\" }}\r\n        src=\"https://thewhitechamaleon.github.io/testrapp/images/search.png\"\r\n        alt=\"Search\"\r\n      /> */}\r\n      <span className=\"ms-4 drag-and-drop-text flex-grow-1\">\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            value={searchText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyPress}\r\n            placeholder=\"Search...\"\r\n            disabled={disabled}\r\n          />\r\n          {searchText && ( // Show clear button only when there's text\r\n            <Button\r\n              variant=\"btn-link\"\r\n              onClick={handleClearClick}\r\n              className=\"clear-button\"\r\n            >\r\n              <Image\r\n                style={{ width: \"13px\", height: \"auto\" }}\r\n                src=\"https://thewhitechamaleon.github.io/testrapp/images/close.png\"\r\n                alt=\"Search\"\r\n              />\r\n            </Button>\r\n          )}\r\n        </InputGroup>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { loadInterCom } from \"../utils/helpers\";\r\n\r\nconst useInterComSearch = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [InterCom, setInterCom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // console.log(\"[useInterComSearch] Loading InterCom module\");\r\n        const interComInstance = await loadInterCom();\r\n        setInterCom(interComInstance);\r\n      } catch (error) {\r\n        console.error(\r\n          \"[useInterComSearch] Error initializing InterCom:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        // console.log(\"[useInterComSearch] Socket disconnected\");\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const performSearch = useCallback(\r\n    (searchText, searchOpts, onObjectsSelected) => {\r\n      // Check if InterCom is loaded\r\n      if (!InterCom) {\r\n        console.warn(\"[useInterComSearch] InterCom is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      const socketName =\r\n        \"socket\" + new Date().toISOString().replace(/[-:]/g, \"\");\r\n      const newSocket = new InterCom.Socket(socketName, {\r\n        dispatchRetryInternal: 0,\r\n      });\r\n      newSocket.subscribeServer(\"SearchComServer\");\r\n      setSocket(newSocket);\r\n\r\n      console.log(\r\n        \"[useInterComSearch] performSearch called with:\",\r\n        searchText,\r\n        searchOpts\r\n      );\r\n\r\n      const widgetId = window.widget?.id;\r\n      // console.log(\"[useInterComSearch] widget id:\", widgetId);\r\n\r\n      const finalSearchOpts = {\r\n        ...searchOpts,\r\n        widget_id: widgetId,\r\n        app_socket_id: socketName,\r\n        default_search_criteria: searchText,\r\n      };\r\n\r\n      // Register the search context (if needed)\r\n      console.log(\r\n        \"[useInterComSearch] Dispatching RegisterContext event with:\",\r\n        finalSearchOpts\r\n      );\r\n      newSocket.dispatchEvent(\"RegisterContext\", finalSearchOpts);\r\n\r\n      // Dispatch the search event\r\n      // console.log(\r\n      //   \"[useInterComSearch] Dispatching InContextSearch event with:\",\r\n      //   finalSearchOpts\r\n      // );\r\n      newSocket.dispatchEvent(\"InContextSearch\", finalSearchOpts);\r\n\r\n      // Add a listener for search results\r\n      const handleSearchResults = (data) => {\r\n        console.log(\"[useInterComSearch] Search results received:\", data);\r\n        if (onObjectsSelected) {\r\n          onObjectsSelected(data);\r\n        }\r\n      };\r\n\r\n      console.log(\r\n        \"[useInterComSearch] Adding listener for Selected_Objects_search\"\r\n      );\r\n      newSocket.addListener(\"Selected_Objects_search\", handleSearchResults);\r\n    },\r\n    [InterCom]\r\n  );\r\n\r\n  return {\r\n    performSearch,\r\n  };\r\n};\r\n\r\nexport default useInterComSearch;\r\n","import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const { isDropped, handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      console.log(\"Selected objects:\", selectedObjects);\r\n      console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`droppable-container mt-4 ${\r\n          isDropped ? \"dropped-active\" : \"\"\r\n        }`}\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useMemo, useState, useEffect } from \"react\";\r\nimport {\r\n  useReactTable,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getSortedRowModel,\r\n} from \"@tanstack/react-table\";\r\nimport {\r\n  DndContext,\r\n  KeyboardSensor,\r\n  MouseSensor,\r\n  TouchSensor,\r\n  closestCenter,\r\n  useSensor,\r\n  useSensors,\r\n} from \"@dnd-kit/core\";\r\nimport { restrictToHorizontalAxis } from \"@dnd-kit/modifiers\";\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  horizontalListSortingStrategy,\r\n  useSortable,\r\n} from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./Table.css\";\r\nimport CustomButton from \"../Button/Button\";\r\nimport { setSelectedTableRows } from \"../../store/droppedObjectSlice\";\r\nimport { handleExportExcel } from \"../../utils/helpers\";\r\nimport { getRowRange } from \"../../utils/helpers\";\r\n\r\nconst DraggableColumnHeader = ({ header, columns, table }) => {\r\n  const isFixed = header.column.id === \"selection\";\r\n  const isPinned = table\r\n    .getState()\r\n    .columnPinning.left.includes(header.column.id);\r\n  const className = isFixed ? \"is-fixed\" : isPinned ? \"is-pinned\" : \"\";\r\n  const sortable = useSortable({\r\n    id: header.column.id,\r\n    disabled: header.column.id === \"selection\" || header.column.id === \"EIN\",\r\n  });\r\n\r\n  const { attributes, listeners, setNodeRef, transform, isDragging } = isFixed\r\n    ? {\r\n        attributes: {},\r\n        listeners: {},\r\n        setNodeRef: null,\r\n        transform: null,\r\n        isDragging: false,\r\n      }\r\n    : sortable;\r\n\r\n  const style = {\r\n    opacity: isDragging ? 0.8 : 1,\r\n    position: isFixed || isPinned ? \"sticky\" : \"relative\",\r\n    left: isFixed ? 0 : \"auto\",\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"width transform 0.2s ease-in-out\",\r\n    width: header.getSize(),\r\n    zIndex: isFixed ? 2 : isDragging ? 1 : isPinned ? 2 : 0,\r\n    cursor: isFixed ? \"default\" : \"move\",\r\n  };\r\n\r\n  return (\r\n    <th\r\n      ref={setNodeRef}\r\n      style={style}\r\n      data-fixed={isFixed}\r\n      data-pinned={isPinned}\r\n      className={className}\r\n    >\r\n      <div\r\n        className=\"d-flex align-items-center header-content\"\r\n        {...(!isFixed ? { ...attributes, ...listeners } : {})}\r\n      >\r\n        <div\r\n          className=\"flex-grow-1\"\r\n          onClick={header.column.getToggleSortingHandler()}\r\n        >\r\n          {header.isPlaceholder\r\n            ? null\r\n            : flexRender(header.column.columnDef.header, header.getContext())}\r\n          {header.column.getIsSorted() === \"asc\" ? (\r\n            <span className=\"icon\">↑</span>\r\n          ) : header.column.getIsSorted() === \"desc\" ? (\r\n            <span className=\"icon\">↓</span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div\r\n        {...{\r\n          onDoubleClick: () => header.column.resetSize(),\r\n          onMouseDown: header.getResizeHandler(),\r\n          onTouchStart: header.getResizeHandler(),\r\n          className: `Resizer ${\r\n            header.column.getIsResizing() ? \"isResizing\" : \"\"\r\n          }`,\r\n        }}\r\n      />\r\n    </th>\r\n  );\r\n};\r\n\r\nconst DraggableCell = ({ cell, columns }) => {\r\n  const isFixed = cell.column.id === \"selection\";\r\n  const isPinned = cell.column.getIsPinned();\r\n  const className = isFixed ? \"is-fixed\" : isPinned ? \"is-pinned\" : \"\";\r\n  const cellContent = flexRender(cell.column.columnDef.cell, cell.getContext());\r\n\r\n  const sortable = useSortable({\r\n    id: cell.column.id,\r\n    disabled: isFixed,\r\n  });\r\n\r\n  const { setNodeRef, transform, isDragging } = isFixed\r\n    ? { setNodeRef: null, transform: null, isDragging: false }\r\n    : sortable;\r\n\r\n  const style = {\r\n    opacity: isDragging ? 0.8 : 1,\r\n    position: isFixed || isPinned ? \"sticky\" : \"relative\",\r\n    left: isFixed ? 0 : \"auto\",\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"width transform 0.2s ease-in-out\",\r\n    width: cell.column.getSize(),\r\n    zIndex: isFixed ? 2 : isDragging ? 1 : isPinned ? 2 : 0,\r\n  };\r\n\r\n  return (\r\n    <td\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className={className}\r\n      title={isFixed ? \"\" : `${cell.getValue()}`}\r\n    >\r\n      {isFixed ? (\r\n        cellContent\r\n      ) : (\r\n        <div className=\"cell-content\">{cellContent}</div>\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst ReusableTable = ({\r\n  columns,\r\n  data,\r\n  editable = false,\r\n  meta,\r\n  widgetType,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [tableData, setTableData] = useState(data);\r\n  const [rowSelection, setRowSelection] = useState({});\r\n  const [lastSelectedId, setLastSelectedId] = useState(null); // Track last clicked row\r\n  // const { updateTableData } = meta;\r\n\r\n  // Modified columnOrder initialization to check localStorage\r\n  const [columnOrder, setColumnOrder] = useState(() => {\r\n    // Try to get stored column order from localStorage\r\n    const storedOrder = localStorage.getItem(\"tableColumnOrder\");\r\n\r\n    if (storedOrder) {\r\n      return JSON.parse(storedOrder);\r\n    }\r\n\r\n    // Default order if nothing in localStorage\r\n    const initialOrder = [\"selection\"];\r\n    const otherColumns = columns.map((col) => col.id || col.accessorKey);\r\n    initialOrder.push(...otherColumns);\r\n    return initialOrder;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tableColumnOrder\", JSON.stringify(columnOrder));\r\n  }, [columnOrder]);\r\n\r\n  // Store default column order for reset functionality\r\n  const defaultColumnOrder = useMemo(() => {\r\n    const initialOrder = [\"selection\"];\r\n    const otherColumns = columns.map((col) => col.id || col.accessorKey);\r\n    initialOrder.push(...otherColumns);\r\n    return initialOrder;\r\n  }, [columns]);\r\n\r\n  const handleEditCell = (rowIndex, columnId, value) => {\r\n    const updatedData = tableData.map((row, index) =>\r\n      index === rowIndex ? { ...row, [columnId]: value } : row\r\n    );\r\n    console.log(\"[Table] Updated Table Data:\", updatedData);\r\n\r\n    // Call the meta function to update external data if needed\r\n    if (meta?.updateTableData) {\r\n      meta.updateTableData(updatedData);\r\n    }\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  // Initialize columnPinning based on column definitions\r\n  const initialColumnPinning = useMemo(() => {\r\n    const pinnedColumns = { left: [\"selection\", \"EIN \"] };\r\n    columns.forEach((column) => {\r\n      if (column.columnPinning) {\r\n        pinnedColumns.left.push(column.id || column.accessorKey);\r\n      }\r\n    });\r\n    return pinnedColumns;\r\n  }, [columns]);\r\n\r\n  // Enhance columns for editable functionality and add checkbox selection\r\n  const enhancedColumns = useMemo(() => {\r\n    const selectionColumn = {\r\n      id: \"selection\",\r\n      header: ({ table }) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          ref={(el) => {\r\n            if (el) {\r\n              el.indeterminate = table.getIsSomeRowsSelected();\r\n            }\r\n          }}\r\n          checked={table.getIsAllRowsSelected()}\r\n          onChange={table.getToggleAllRowsSelectedHandler()}\r\n        />\r\n      ),\r\n      cell: ({ row }) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          {...{\r\n            checked: row.getIsSelected(),\r\n            onChange: row.getToggleSelectedHandler(),\r\n          }}\r\n        />\r\n      ),\r\n    };\r\n\r\n    const baseColumns = editable\r\n      ? columns.map((column) => ({\r\n          ...column,\r\n          cell: column.editable\r\n            ? ({ row, getValue }) => (\r\n                <input\r\n                  className=\"input-cell\"\r\n                  value={getValue()}\r\n                  onChange={(e) =>\r\n                    handleEditCell(\r\n                      row.index,\r\n                      column.accessorKey,\r\n                      e.target.value\r\n                    )\r\n                  }\r\n                />\r\n              )\r\n            : column.cell,\r\n        }))\r\n      : columns;\r\n\r\n    return [selectionColumn, ...baseColumns];\r\n  }, [columns, editable]);\r\n\r\n  const sensors = useSensors(\r\n    useSensor(MouseSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    useSensor(TouchSensor, {\r\n      activationConstraint: {\r\n        delay: 200,\r\n        tolerance: 5,\r\n      },\r\n    }),\r\n    useSensor(KeyboardSensor, {})\r\n  );\r\n\r\n  // Modified handleDragEnd to save to localStorage\r\n  const handleDragEnd = (event) => {\r\n    const { active, over } = event;\r\n\r\n    if (active && over && active.id !== over.id) {\r\n      if (active.id !== \"selection\" && active.id !== \"EIN\") {\r\n        setColumnOrder((prevOrder) => {\r\n          const oldIndex = prevOrder.indexOf(active.id);\r\n          const newIndex = prevOrder.indexOf(over.id);\r\n          const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\r\n          return newOrder;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Add reset columns handler\r\n  const handleResetColumns = () => {\r\n    setColumnOrder(defaultColumnOrder);\r\n    localStorage.removeItem(\"tableColumnOrder\");\r\n  };\r\n\r\n  const table = useReactTable({\r\n    data: tableData,\r\n    columns: enhancedColumns,\r\n    state: {\r\n      rowSelection,\r\n      columnOrder,\r\n      columnPinning: initialColumnPinning,\r\n    },\r\n    onRowSelectionChange: setRowSelection,\r\n    onColumnOrderChange: setColumnOrder,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    enableRowSelection: true,\r\n    defaultColumn: {\r\n      size: 159,\r\n      minSize: 45,\r\n      maxSize: 500,\r\n    },\r\n    columnResizeMode: \"onChange\",\r\n    // meta: {\r\n    //   updateTableData, // Added this to the meta field to allow columns to update the table data\r\n    // },\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Get selected row data using table.getSelectedRowModel()\r\n    const selectedRows = table\r\n      .getSelectedRowModel()\r\n      .flatRows.map((row) => row.original);\r\n    // console.log(\"Selected Rows (TanStack Table):\", selectedRows);\r\n    dispatch(setSelectedTableRows(selectedRows)); // Update Redux store\r\n  }, [rowSelection, dispatch]); // Update when rowSelection changes\r\n\r\n  const columnSizeVars = useMemo(() => {\r\n    const headers = table.getFlatHeaders();\r\n    const colSizes = {};\r\n    for (let i = 0; i < headers.length; i++) {\r\n      const header = headers[i];\r\n      colSizes[`--header-${header.id}-size`] = header.getSize();\r\n      colSizes[`--col-${header.column.id}-size`] = header.column.getSize();\r\n    }\r\n    return colSizes;\r\n  }, [table.getState().columnSizingInfo, table.getState().columnSizing]);\r\n\r\n  const handleSelectAll = () => {\r\n    table.getToggleAllRowsSelectedHandler()({\r\n      target: { checked: true },\r\n    });\r\n  };\r\n\r\n  const handleDeselectAll = () => {\r\n    table.getToggleAllRowsSelectedHandler()({\r\n      target: { checked: false },\r\n    });\r\n  };\r\n\r\n  const handleExport = () => {\r\n    // Check if the widgetType is \"Revision_FLoat_Widget\" or \"Plantassignment\"//\r\n\r\n    // Otherwise, use handleExportExcel with the default file name \"table-data.xlsx\"//\r\n    console.log(\"Export buttton clicked\");\r\n    if (widgetType === \"Revision_FLoat_Widget\") {\r\n      handleExportExcel(data, \"Revision_Float_Data.xlsx\");\r\n    } else if (widgetType === \"Plantassignment\") {\r\n      handleExportExcel(data, \"EAN_Manufacturing.xlsx\");\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (row, event) => {\r\n    const { rows, rowsById } = table.getRowModel();\r\n    if (event.shiftKey && lastSelectedId) {\r\n      try {\r\n        const rowsToToggle = getRowRange(rows, row.id, lastSelectedId);\r\n        const isLastSelected = rowsById[lastSelectedId].getIsSelected();\r\n        rowsToToggle.forEach((r) => r.toggleSelected(isLastSelected));\r\n      } catch (e) {\r\n        console.error(\"Multi-select with shift+click failed:\", e);\r\n      }\r\n    } else {\r\n      row.toggleSelected(!row.getIsSelected());\r\n    }\r\n    setLastSelectedId(row.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"toolkit my-3\">\r\n        <div className=\"d-flex justify-content-end button-container\">\r\n          <div className=\"d-flex\">\r\n            <CustomButton\r\n              variant=\"outline-primary\"\r\n              size=\"lg\"\r\n              onClick={handleSelectAll}\r\n              className=\"m-2\"\r\n              text=\"Select All\"\r\n            />\r\n\r\n            <CustomButton\r\n              variant=\"outline-secondary\"\r\n              size=\"lg\"\r\n              onClick={handleDeselectAll}\r\n              className=\"m-2\"\r\n              text=\"Deselect  All\"\r\n            />\r\n\r\n            <CustomButton\r\n              variant=\"outline-success\"\r\n              size=\"lg\"\r\n              onClick={handleExport}\r\n              className=\"m-2 border-bottom-10px\"\r\n              text=\"Export to CSV \"\r\n            />\r\n\r\n            <CustomButton\r\n              variant=\"outline-warning\"\r\n              size=\"lg\"\r\n              onClick={handleResetColumns}\r\n              className=\"m-2\"\r\n              text=\"Reset Columns\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"table-info\">\r\n        <p>{tableData.length} Items</p>\r\n      </div>\r\n      <DndContext\r\n        sensors={sensors}\r\n        collisionDetection={closestCenter}\r\n        modifiers={[restrictToHorizontalAxis]}\r\n        onDragEnd={handleDragEnd}\r\n      >\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table custom-table table-hover\"\r\n            style={{\r\n              ...columnSizeVars,\r\n              width: table.getTotalSize(),\r\n            }}\r\n          >\r\n            <thead>\r\n              {table.getHeaderGroups().map((headerGroup) => (\r\n                <tr key={headerGroup.id}>\r\n                  <SortableContext\r\n                    items={table.getVisibleLeafColumns().map((col) => col.id)}\r\n                    strategy={horizontalListSortingStrategy}\r\n                  >\r\n                    {headerGroup.headers.map((header) => (\r\n                      <DraggableColumnHeader\r\n                        key={header.id}\r\n                        header={header}\r\n                        columns={columns}\r\n                        table={table}\r\n                      />\r\n                    ))}\r\n                  </SortableContext>\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody>\r\n              {/* Debug log */}\r\n              {table.getRowModel().rows.length > 0 ? (\r\n                table.getRowModel().rows.map((row) => (\r\n                  <tr\r\n                    key={row.id}\r\n                    onClick={(event) => handleRowClick(row, event)} // Add click handler\r\n                    className={rowSelection[row.id] ? \"row-selected\" : \"\"}\r\n                  >\r\n                    <SortableContext\r\n                      items={table.getVisibleLeafColumns().map((col) => col.id)}\r\n                      strategy={horizontalListSortingStrategy}\r\n                    >\r\n                      {row.getVisibleCells().map((cell) => (\r\n                        <DraggableCell\r\n                          key={cell.id}\r\n                          cell={cell}\r\n                          columns={columns}\r\n                        />\r\n                      ))}\r\n                    </SortableContext>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td\r\n                    colSpan={table.getHeaderGroups()[0].headers.length}\r\n                    className=\"no-data p-2\"\r\n                  >\r\n                    No Parent object(s) found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </DndContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReusableTable;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setDroppedObjectData,\r\n} from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport useRevisions from \"./useRevisions\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  // fetchCsrfTokenAndDependencies as fetchCsrfService,\r\n  getDroppedObjectDetails,\r\n  // fetchCardOwnerDetails as fetchCardOwnerDetailsService,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\n\r\nconst useDroppableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { fetchRevisionsAndParents } = useRevisions();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Merge the data from both services\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n            })\r\n          );\r\n\r\n          dispatch(setIsDroppedAction(true));\r\n\r\n          // call revisions and parents after successfully fetching object details\r\n          const relativePath =\r\n            objectDetailsResult.data.cardData.relativePath;\r\n          await fetchRevisionsAndParents(\r\n            dataItems[0]?.objectId,\r\n            dataItems[0]?.objectType,\r\n            relativePath\r\n          );\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, fetchRevisionsAndParents, showErrorToast]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      setLoading(true); // Start loading state\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\"VPMReference\", \"Document\", \"Raw_Material\"];\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            setLoading(false);\r\n            return;\r\n          }\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        setLoading(false);\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    dispatch(setIsDroppedAction(false));\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDroppableArea;\r\n","import { useDispatch } from \"react-redux\";\r\nimport {\r\n  setDroppedObjectData,\r\n  setParentDetailsLoading,\r\n} from \"../store/droppedObjectSlice\";\r\nimport useToast from \"../hooks/useToast\";\r\n\r\nimport api from \"../utils/api\"; // Import axios instance\r\nimport { MSG_REPLACE_SUCCESS, MSG_REPLACE_ERROR } from \"../utils/toastMessages\";\r\n\r\nconst useRevisions = () => {\r\n  const dispatch = useDispatch();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  const fetchRevisionsAndParents = async (\r\n    objectId,\r\n    objectType,\r\n    relativePath\r\n  ) => {\r\n    if (!relativePath) {\r\n      console.error(\"[Fetch Revisions] Missing relative path.\");\r\n      return;\r\n    }\r\n\r\n    const parentURL = `/revFloat/getParents`; // Use relative path for axios\r\n\r\n    try {\r\n      dispatch(setParentDetailsLoading(true));\r\n      // console.log(\r\n      //   \"[fetchRevisionsAndParents] Setting loadingParentDetails to true\"\r\n      // );\r\n      // console.log(\"objectId\", objectId);\r\n      // console.log(\"type\", objectType);\r\n      // Use the axios instance to make the POST request\r\n      const response = await api.post(parentURL, {\r\n        data: {\r\n          id: objectId,\r\n          type: objectType,\r\n          relativePath: relativePath,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const parentDetails = response.data;\r\n        // console.log(\"[Fetch Parent Information] Parents fetched:\", parentDetails);\r\n        dispatch(\r\n          setDroppedObjectData({\r\n            parentDetails: parentDetails,\r\n          })\r\n        );\r\n      } else {\r\n        throw new Error(\r\n          `[Object Details] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[Fetch Revisions] Error occurred:\", error);\r\n      dispatch(setParentDetailsLoading(false));\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false));\r\n      // console.log(\r\n      //   \"[fetchRevisionsAndParents] Setting loadingParentDetails to false\"\r\n      // );\r\n    }\r\n  };\r\n\r\n  const replaceRevisions = async (selectedParents, droppedData, userEmail) => {\r\n    const parentURL = `/revFloat/floatRevisions`; // Use relative path for axios\r\n\r\n    try {\r\n      dispatch(setParentDetailsLoading(true));\r\n\r\n      // Make the POST request to the replacement API\r\n      const response = await api.post(parentURL, {\r\n        SelectedParents: selectedParents,\r\n        DroppedData: droppedData,\r\n        userEmail: userEmail,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Handle successful replacement\r\n        console.log(\"Replacement successful:\", response.data);\r\n        showSuccessToast(MSG_REPLACE_SUCCESS); // Show success toast\r\n        // You might want to update the Redux store or refetch data here\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(\r\n          `[Replacement API] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during replacement:\", error);\r\n      showErrorToast(MSG_REPLACE_ERROR); // Show error toast\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false)); // Hide loader\r\n    }\r\n  };\r\n\r\n  return { fetchRevisionsAndParents, replaceRevisions };\r\n};\r\n\r\nexport default useRevisions;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 5000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = true,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import { callwebService } from \"../../utils/helpers\";\r\nimport { setInitialDroppedObjectData } from \"../../store/droppedObjectSlice\";\r\nimport api from \"../../utils/api\";\r\nimport { MSG_MULTIPLE_OBJECTS_DROPPED } from \"../../utils/toastMessages\";\r\n\r\nexport const initializeDroppableArea = (\r\n  droppableContainer,\r\n  handleDrop,\r\n  dispatch,\r\n  showErrorToast\r\n) => {\r\n  window.require([\"DS/DataDragAndDrop/DataDragAndDrop\"], (DataDragAndDrop) => {\r\n    DataDragAndDrop.droppable(droppableContainer, {\r\n      drop: (data) => {\r\n        console.log(\"[DragAndDrop] Drop event:\", data);\r\n        const parsedData = JSON.parse(data);\r\n        const dataItems = parsedData.data.items;\r\n        // Check if more than one object is being dropped\r\n        if (dataItems.length > 1) {\r\n          showErrorToast(MSG_MULTIPLE_OBJECTS_DROPPED);\r\n          droppableContainer.classList.remove(\"drag-over\");\r\n          return; // Stop further execution\r\n        }\r\n        dispatch(\r\n          setInitialDroppedObjectData({\r\n            initialDraggedData: JSON.parse(data),\r\n          })\r\n        );\r\n        handleDrop(dataItems);\r\n        droppableContainer.classList.remove(\"drag-over\");\r\n      },\r\n      enter: () => {\r\n        droppableContainer.classList.add(\"drag-over\");\r\n      },\r\n      out: () => {\r\n        droppableContainer.classList.remove(\"drag-over\");\r\n      },\r\n      leave: () => {\r\n        droppableContainer.classList.remove(\"drag-over\");\r\n      },\r\n    });\r\n  });\r\n};\r\n\r\n// export const fetchCsrfTokenAndDependencies = async ({\r\n//   dataItems,\r\n//   setCsrfHeaders,\r\n//   onSuccess,\r\n//   onError,\r\n// }) => {\r\n//   try {\r\n//     const WAFData = await loadWAFData();\r\n//     const csrfURL= process.env.REACT_APP_CSRF_URL\r\n//     const response = await new Promise((resolve, reject) => {\r\n//       WAFData.authenticatedRequest(csrfURL, {\r\n//         method: \"GET\",\r\n//         type: \"json\",\r\n//         onComplete: resolve,\r\n//         onFailure: reject,\r\n//       });\r\n//     });\r\n// // Revision Float\r\n//     const csrfToken = response.csrf.name;\r\n//     const csrfValue = response.csrf.value;\r\n//     const securityContextHeader = \"SecurityContext\";\r\n//     const securityContextValue =\r\n//       \"ctx%3A%3AVPLMProjectLeader.BU-0000001.Rosemount%20Flow\";\r\n\r\n//     const headers = {\r\n//       [csrfToken]: csrfValue,\r\n//       [securityContextHeader]: securityContextValue,\r\n//     };\r\n\r\n//     if (setCsrfHeaders) setCsrfHeaders(headers);\r\n\r\n//     if (onSuccess) onSuccess(headers, dataItems); // Pass both headers and dataItems\r\n//   } catch (error) {\r\n//     console.error(\"[CSRF] Failed to fetch token:\", error);\r\n\r\n//     if (onError) onError(error);\r\n//   }\r\n// };\r\n\r\nexport const getDroppedObjectDetails = async ({ dataItems }) => {\r\n  try {\r\n    if (!dataItems || dataItems.length === 0) {\r\n      console.error(\"[Object Details] No items to fetch.\");\r\n      return;\r\n    }\r\n    const objectId = dataItems[0]?.objectId;\r\n    const type = dataItems[0]?.objectType;\r\n\r\n    if (!objectId || !type) {\r\n      throw new Error(\"[Object Details] Missing or invalid object ID or type\");\r\n    }\r\n\r\n    // Use the axios instance to make the GET request\r\n    const objectDetailsURL = `/revFloat/getDroppedObjectDetails?oid=${objectId}&type=${type}`;\r\n    const response = await api.get(objectDetailsURL);\r\n\r\n    // Use response.status instead of response.ok\r\n    if (response.status === 200) {\r\n      return {\r\n        success: true,\r\n        data: {\r\n          cardData: response.data, // Axios automatically parses JSON\r\n        },\r\n      };\r\n    } else {\r\n      throw new Error(\r\n        `[Object Details] HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\"[Object Details] Failed to fetch data:\", error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n// export const fetchCardOwnerDetails = async ({ dataItems, headers }) => {\r\n//   try {\r\n//     if (!dataItems || dataItems.length === 0) {\r\n//       console.error(\"[Card Owner Details] No items to fetch.\");\r\n//       return;\r\n//     }\r\n\r\n//     const objectID = dataItems[0]?.objectId;\r\n//     if (!objectID) {\r\n//       console.error(\"[Card Owner Details] Missing or invalid object ID:\", dataItems);\r\n//       return;\r\n//     }\r\n\r\n//     // Construct the URL dynamically\r\n//     const cardOwnerDetailsURL = `${process.env.REACT_APP_CARD_OWNER_DETAILS_URL_BASE}/${objectID}?xrequestedwith=xmlhttprequest`;\r\n\r\n//     const WAFData = await loadWAFData();\r\n//     const response = await new Promise((resolve, reject) => {\r\n//       WAFData.authenticatedRequest(cardOwnerDetailsURL, {\r\n//         method: \"GET\",\r\n//         headers,\r\n//         type: \"json\",\r\n//         onComplete: resolve,\r\n//         onFailure: reject,\r\n//       });\r\n//     });\r\n\r\n//     return {\r\n//       success: true,\r\n//       data: {\r\n//         ownerData: {\r\n//           cardownerdata: response.data,\r\n//         },\r\n//       },\r\n//     };\r\n//   } catch (error) {\r\n//     console.error(\"[Card Owner Details] Failed to fetch data:\", error);\r\n//     return { success: false, error };\r\n//   }\r\n// };\r\n\r\nexport const SecurityContext = async () => {\r\n  let email = \"\";\r\n\r\n  let securitycontextpreference = {\r\n    name: \"Credentials\",\r\n    type: \"list\",\r\n    label: \"Credentials\",\r\n    options: [],\r\n    defaultValue: \"\",\r\n  };\r\n\r\n  let urlObjWAF =\r\n    \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/modeler/pno/person?current=true&select=collabspaces&select=preferredcredentials&select=email\";\r\n  let response = await callwebService(\"GET\", urlObjWAF, \"\");\r\n\r\n  // console.log(\"Response for Preferences:\", response);\r\n  if (response.status) {\r\n    if (response.output.collabspaces) {\r\n      response.output.collabspaces.forEach((collabspace) => {\r\n        let organization = collabspace.name.trim();\r\n        let couples = collabspace.couples;\r\n        couples.forEach((couple) => {\r\n          //MSOL-Micro Motion ● Measurement Solutions ● Leader\r\n          const SecurityContextStr =\r\n            couple.role.name +\r\n            \".\" +\r\n            couple.organization.name +\r\n            \".\" +\r\n            organization;\r\n          const SecurityContextLbl =\r\n            organization.replace(\"MSOL-\", \"\") +\r\n            \" ● \" +\r\n            couple.organization.title +\r\n            \" ● \" +\r\n            couple.role.nls;\r\n          securitycontextpreference.options.push({\r\n            value: SecurityContextStr,\r\n            label: SecurityContextLbl,\r\n          });\r\n        });\r\n      });\r\n    }\r\n    if (response.output.preferredcredentials) {\r\n      const preferredCredentials = response.output.preferredcredentials;\r\n      const defaultOption = `${preferredCredentials.role.name}.${preferredCredentials.organization.name}.${preferredCredentials.collabspace.name}`;\r\n      securitycontextpreference.defaultValue = defaultOption;\r\n    }\r\n    if (response.output.email) {\r\n      email = response.output.email;\r\n    }\r\n  }\r\n\r\n  return { securitycontextpreference: securitycontextpreference, email: email };\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  droppedObjectData: {\r\n    initialDraggedData: [],\r\n    cardData: {}, // Dragged object details\r\n    versions: [], // Object versions (revisions)\r\n    parentDetails: [], // Parent metadata\r\n    ownerData: {} /* data from cardOwnerResult */,\r\n  },\r\n  plantObjectData: {\r\n    allPlants: [],\r\n    initialAssignedPlants: [],\r\n    uniquePlants: [],\r\n    productChildren: [],\r\n    CAName: false,\r\n    headers: {},\r\n    proposedChanges: [],\r\n  },\r\n  loadingParentDetails: false, // Loading state for parent metadata\r\n  isDropped: false, // Indicates whether an object has been dropped\r\n  selectedTableRows: [],\r\n};\r\n\r\nconst droppedObjectSlice = createSlice({\r\n  name: \"droppedObject\",\r\n  initialState,\r\n  reducers: {\r\n    setInitialDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData.initialDraggedData =\r\n        action.payload.initialDraggedData;\r\n    },\r\n    setDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData = {\r\n        ...state.droppedObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setPlantObjectData: (state, action) => {\r\n      state.plantObjectData = {\r\n        ...state.plantObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setProductChildren: (state, action) => {\r\n      state.plantObjectData.productChildren = action.payload;\r\n    },\r\n    setProposedChanges: (state, action) => {\r\n      state.plantObjectData.proposedChanges = action.payload;\r\n    },\r\n    setHeaders: (state, action) => {\r\n      state.plantObjectData.headers = action.payload;\r\n    },\r\n    setCAName: (state, action) => {\r\n      state.plantObjectData.CAName = action.payload;\r\n    },\r\n\r\n    setParentDetailsLoading: (state, action) => {\r\n      state.loadingParentDetails = action.payload;\r\n    },\r\n    setIsDropped: (state, action) => {\r\n      state.isDropped = action.payload;\r\n    },\r\n    setSelectedTableRows: (state, action) => {\r\n      state.selectedTableRows = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setInitialDroppedObjectData,\r\n  setDroppedObjectData,\r\n  setPlantObjectData,\r\n  setProductChildren,\r\n  setCAName,\r\n  setHeaders,\r\n  setParentDetailsLoading,\r\n  setIsDropped,\r\n  setSelectedTableRows,\r\n  setProposedChanges,\r\n} = droppedObjectSlice.actions;\r\nexport default droppedObjectSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport droppedObjectReducer from \"./droppedObjectSlice\";\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    droppedObject: droppedObjectReducer,\r\n  },\r\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n","// utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://emr-product-datahub-server-sap-stage.azurewebsites.net', // Your API base URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default api;","import * as XLSX from \"xlsx\"; // For Excel export\r\n\r\nexport const loadWAFData = async () => {\r\n  return await new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"DS/WAFData/WAFData\"],\r\n      (module) => {\r\n        resolve(module);\r\n      },\r\n      reject\r\n    );\r\n  });\r\n};\r\n\r\nexport const loadInterCom = async () => {\r\n  return await new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"UWA/Utils/InterCom\"],\r\n      (InterCom) => {\r\n        console.log(\"InterCom module loaded:\", InterCom); // Log the loaded module\r\n        resolve(InterCom);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error loading InterCom module:\", error);\r\n        reject(error);\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nexport const loadPlatformAPI = () => {\r\n  return new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"DS/PlatformAPI/PlatformAPI\"],\r\n      (PlatformAPI) => {\r\n        if (PlatformAPI) {\r\n          resolve(PlatformAPI);\r\n        } else {\r\n          reject(new Error(\"Failed to load PlatformAPI\"));\r\n        }\r\n      },\r\n      reject\r\n    );\r\n  });\r\n};\r\n\r\nexport const callwebService = async (method, url, body) => {\r\n  let returnobj = {};\r\n  const WAFData = await loadWAFData();\r\n  let dataResp = WAFData.authenticatedRequest(url, {\r\n    method: method,\r\n    data: body,\r\n    type: \"json\",\r\n    async: false,\r\n    onComplete: function (dataResp) {\r\n      returnobj.status = true;\r\n      returnobj.output = dataResp;\r\n      console.log(\"kp--CallWebService--- >> \", dataResp);\r\n    },\r\n    onFailure: function (error, backendresponse, response_hdrs) {\r\n      console.log(\"Failedddddd\", error.message);\r\n      returnobj.status = false;\r\n      console.log(response_hdrs);\r\n      widget.body.innerHTML += \"<p>Something Went Wrong\" + error + \"</p>\";\r\n    },\r\n  });\r\n\r\n  return returnobj;\r\n};\r\nexport const makeDraggable = (element, data, onDragStart, onDragEnd) => {\r\n  window.require([\"DS/DataDragAndDrop/DataDragAndDrop\"], (DataDragAndDrop) => {\r\n    if (DataDragAndDrop) {\r\n      DataDragAndDrop.draggable(element, {\r\n        data: JSON.stringify(data),\r\n        start: function () {\r\n          if (onDragStart) onDragStart();\r\n        },\r\n        stop: function () {\r\n          console.log(\"Drag End\"); // Check if this is logged\r\n          if (onDragEnd) onDragEnd();\r\n        },\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nexport const excludeFields = [\"Dropped Revision ID\"];\r\n\r\nexport const handleExportExcel = (tableData, fileName = \"table-data.xlsx\") => {\r\n  const filteredData = tableData.map((row) => {\r\n    return Object.keys(row)\r\n      .filter((key) => !excludeFields.includes(key))\r\n      .reduce((obj, key) => {\r\n        obj[key] = row[key];\r\n        return obj;\r\n      }, {});\r\n  });\r\n\r\n  console.log(\"Filtered Data for Excel Export:\", filteredData);\r\n\r\n  const worksheet = XLSX.utils.json_to_sheet(filteredData);\r\n\r\n  const columnWidths = Object.keys(filteredData[0] || {}).map((key) => ({\r\n    wch:\r\n      Math.max(\r\n        key.length,\r\n        ...filteredData.map((row) =>\r\n          row[key] ? row[key].toString().length : 0\r\n        )\r\n      ) || 10, // Fallback to 10 if width calculation is invalid\r\n  }));\r\n  worksheet[\"!cols\"] = columnWidths;\r\n\r\n  // Apply text wrapping to all cells in the worksheet\r\n  const range = XLSX.utils.decode_range(worksheet[\"!ref\"]);\r\n  for (let rowNum = range.s.r; rowNum <= range.e.r; rowNum++) {\r\n    for (let colNum = range.s.c; colNum <= range.e.c; colNum++) {\r\n      const cell = worksheet[XLSX.utils.encode_cell({ r: rowNum, c: colNum })];\r\n      if (cell) {\r\n        cell.s = {\r\n          alignment: { wrapText: true },\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Table Data\");\r\n\r\n  // Generate and download the Excel file with the specified file name\r\n  XLSX.writeFile(workbook, fileName);\r\n};\r\n\r\n\r\n\r\n  /// Handle row selection and row range selection//\r\n  export const getRowRange = (rows, idA, idB) => {\r\n    const range = [];\r\n    let foundStart = false;\r\n    let foundEnd = false;\r\n    for (let index = 0; index < rows.length; index += 1) {\r\n      const row = rows[index];\r\n      if (row.id === idA || row.id === idB) {\r\n        if (foundStart) {\r\n          foundEnd = true;\r\n        }\r\n        if (!foundStart) {\r\n          foundStart = true;\r\n        }\r\n      }\r\n      if (foundStart) {\r\n        range.push(row);\r\n      }\r\n      if (foundEnd) {\r\n        break;\r\n      }\r\n    }\r\n    if (!foundEnd) {\r\n      throw new Error(\"Could not find whole row range\");\r\n    }\r\n    return range;\r\n  };","// constants/toastMessages.js\r\nexport const MSG_FETCH_CSRF_HEADERS_FAILED =\r\n  \"Failed to fetch CSRF headers. Please try again.\";\r\nexport const MSG_FETCH_OBJECT_DETAILS_FAILED =\r\n  \"Failed to fetch object details.\";\r\nexport const MSG_FETCH_OBJECT_DETAILS_SUCCESS =\r\n  \"Object details fetched successfully!\";\r\n// export const MSG_WIDGET_RESET_SUCCESS = \"Widget has been reset.\";\r\n// export const MSG_TABLE_DATA_FETCHED_SUCCESS =\r\n//   \"Table data fetched successfully!\";\r\nexport const MSG_UNEXPECTED_ERROR =\r\n  \"An unexpected error occurred. Please try again.\";\r\nexport const MSG_REFRESH_SUCCESS = \"Widget data refreshed successfully!\";\r\nexport const MSG_REFRESH_ERROR = \"An error occurred during refresh.\";\r\nexport const MSG_EMPTYADD_ERROR = \"Please select any one Plant\";\r\nexport const MSG_ADDPRODUCT_RELEASED_ERROR =\r\n  \"Change Action is required to assign plants to Product, please assign Modify change Action and try again\";\r\nexport const MSG_ADDPRODUCT_NOT_ALLOWED_ERROR =\r\n  \"Change Action is required to assign plants to Product, please assign change Action and try again\";\r\nexport const MSG_SAVEPRODUCT_RELEASED_ERROR =\r\n  \"Change Action is required to update plants, please assign Modify change Action and try again\";\r\nexport const MSG_SAVEPRODUCT_NOT_ALLOWED_ERROR =\r\n  \"Change Action is required to update, please assign change Action and try again\";\r\nexport const MSG_SAVE_SUCCESS = \"Data Saved Successfully\";\r\nexport const MSG_REPLACE_SUCCESS =\r\n  \"Replacement successful, Please wait for the data to index\";\r\nexport const MSG_REPLACE_ERROR = \"An error occurred during replacement\";\r\nexport const MSG_NO_ROWS = \"No rows selected.\";\r\n// export const MSG_NO_REPLACE = \"No rows with 'To-Be child connected' selected.\";\r\nexport const MSG_NO_REPLACE =\r\n  \"Latest Revision already connected to selected parents\";\r\n\r\n// Validate object type [VPMReference, Document, Raw_Material]//\r\nexport const MSG_INVALID_OBJECT_TYPE =\r\n  \"Please select a Physical Product, Document or Raw Material\";\r\nexport const MSG_MULTIPLE_OBJECTS_DROPPED =\r\n  \"Multiple objects dropped. Please drop only one object.\";\r\n"],"names":["WidgetLifecycle","handleDrop","useDroppableArea","showSuccessToast","showErrorToast","useToast","initialDraggedData","useSelector","state","droppedObject","droppedObjectData","_jsx","_Fragment","children","CustomButton","variant","className","size","text","onClick","async","data","items","objectId","objectType","dataItems","console","log","length","Error","error","warn","refreshWidgetData","MSG_REFRESH_SUCCESS","MSG_REFRESH_ERROR","_ref","type","disabled","title","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","src","alt","style","width","height","marginRight","isColumn","onDragStart","onDragEnd","titleRef","useRef","useEffect","current","makeDraggable","concat","ref","border","owner","paddingLeft","EIN","Description","setIsColumn","useState","Card","Img","imageURL","CardBody","List","toggleFlexDirection","Image","DragAndDropStandAlone","isDropped","isDragging","setIsDragging","CardComponent","handleDragStart","handleDragEnd","onSearch","searchText","setSearchText","inputRef","FontAwesomeIcon","icon","faMagnifyingGlass","handleSearchIconClick","trim","cursor","InputGroup","Form","Control","value","onChange","event","newSearchText","target","onKeyDown","key","placeholder","handleClearClick","focus","useInterComSearch","socket","setSocket","InterCom","setInterCom","interComInstance","loadInterCom","loadData","disconnect","performSearch","useCallback","searchOpts","onObjectsSelected","_window$widget","socketName","Date","toISOString","replace","newSocket","Socket","dispatchRetryInternal","subscribeServer","widgetId","window","widget","id","finalSearchOpts","widget_id","app_socket_id","default_search_criteria","dispatchEvent","addListener","DragAndDropComponent","SearchInput","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","Loader","DraggableColumnHeader","header","columns","table","isFixed","column","isPinned","getState","columnPinning","left","includes","sortable","useSortable","attributes","listeners","setNodeRef","transform","opacity","position","CSS","Transform","toString","transition","getSize","zIndex","getToggleSortingHandler","isPlaceholder","flexRender","columnDef","getContext","getIsSorted","onDoubleClick","resetSize","onMouseDown","getResizeHandler","onTouchStart","getIsResizing","DraggableCell","_ref2","cell","getIsPinned","cellContent","getValue","_ref3","editable","meta","widgetType","dispatch","useDispatch","tableData","setTableData","rowSelection","setRowSelection","lastSelectedId","setLastSelectedId","columnOrder","setColumnOrder","storedOrder","localStorage","getItem","JSON","parse","initialOrder","otherColumns","map","col","accessorKey","push","setItem","stringify","defaultColumnOrder","useMemo","initialColumnPinning","pinnedColumns","forEach","enhancedColumns","selectionColumn","_ref4","el","indeterminate","getIsSomeRowsSelected","checked","getIsAllRowsSelected","getToggleAllRowsSelectedHandler","_ref5","row","getIsSelected","getToggleSelectedHandler","_ref6","e","handleEditCell","rowIndex","columnId","updatedData","index","updateTableData","sensors","useSensors","useSensor","MouseSensor","activationConstraint","distance","TouchSensor","delay","tolerance","KeyboardSensor","useReactTable","onRowSelectionChange","onColumnOrderChange","getCoreRowModel","getSortedRowModel","enableRowSelection","defaultColumn","minSize","maxSize","columnResizeMode","selectedRows","getSelectedRowModel","flatRows","original","setSelectedTableRows","columnSizeVars","headers","getFlatHeaders","colSizes","i","columnSizingInfo","columnSizing","handleSelectAll","handleDeselectAll","handleExport","handleExportExcel","handleResetColumns","removeItem","DndContext","collisionDetection","closestCenter","modifiers","restrictToHorizontalAxis","active","over","prevOrder","oldIndex","indexOf","newIndex","arrayMove","getTotalSize","getHeaderGroups","headerGroup","SortableContext","getVisibleLeafColumns","strategy","horizontalListSortingStrategy","getRowModel","rows","handleRowClick","rowsById","shiftKey","rowsToToggle","getRowRange","isLastSelected","r","toggleSelected","getVisibleCells","colSpan","fetchRevisionsAndParents","useRevisions","loading","setLoading","fetchObjectDetails","objectDetailsResult","getDroppedObjectDetails","success","_dataItems$","_dataItems$2","setDroppedObjectData","cardData","setIsDroppedAction","relativePath","MSG_FETCH_OBJECT_DETAILS_FAILED","_dataItems$3","MSG_INVALID_OBJECT_TYPE","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","setParentDetailsLoading","response","api","post","status","parentDetails","replaceRevisions","selectedParents","droppedData","userEmail","SelectedParents","DroppedData","MSG_REPLACE_SUCCESS","MSG_REPLACE_ERROR","message","showToast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","Bounce","otherOptions","toast","options","arguments","undefined","showInfoToast","showWarningToast","require","DataDragAndDrop","droppable","drop","MSG_MULTIPLE_OBJECTS_DROPPED","classList","remove","setInitialDroppedObjectData","enter","add","out","leave","objectDetailsURL","get","SecurityContext","email","securitycontextpreference","name","label","defaultValue","callwebService","output","collabspaces","collabspace","organization","couples","couple","SecurityContextStr","SecurityContextLbl","nls","preferredcredentials","preferredCredentials","defaultOption","droppedObjectSlice","createSlice","initialState","versions","ownerData","plantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","CAName","proposedChanges","loadingParentDetails","selectedTableRows","reducers","action","payload","setPlantObjectData","setProductChildren","setProposedChanges","setHeaders","setCAName","setIsDropped","actions","configureStore","reducer","droppedObjectReducer","axios","create","baseURL","loadWAFData","Promise","resolve","reject","module","loadPlatformAPI","PlatformAPI","method","url","body","returnobj","authenticatedRequest","onComplete","dataResp","onFailure","backendresponse","response_hdrs","innerHTML","element","start","stop","excludeFields","fileName","filteredData","Object","keys","filter","reduce","obj","worksheet","XLSX","json_to_sheet","columnWidths","wch","Math","max","range","decode_range","rowNum","s","colNum","c","encode_cell","alignment","wrapText","workbook","book_new","book_append_sheet","idA","idB","foundStart","foundEnd","MSG_FETCH_CSRF_HEADERS_FAILED","MSG_EMPTYADD_ERROR","MSG_ADDPRODUCT_RELEASED_ERROR","MSG_ADDPRODUCT_NOT_ALLOWED_ERROR","MSG_SAVEPRODUCT_RELEASED_ERROR","MSG_SAVEPRODUCT_NOT_ALLOWED_ERROR","MSG_SAVE_SUCCESS","MSG_NO_ROWS","MSG_NO_REPLACE"],"sourceRoot":""}
{"version":3,"file":"static/js/635.a5b34e14.chunk.js","mappings":"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","sources":["store/droppedObjectSlice.js","store/index.js","utils/api.js","index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  droppedObjectData: {\r\n    initialDraggedData: [],\r\n    cardData: {}, // Dragged object details\r\n    versions: [], // Object versions (revisions)\r\n    parentDetails: [], // Parent metadata\r\n    ownerData: {} /* data from cardOwnerResult */,\r\n  },\r\n  plantObjectData: {\r\n    allPlants: [],\r\n    initialAssignedPlants: [],\r\n    uniquePlants: [],\r\n    productChildren: [],\r\n    CAName: false,\r\n    headers: {},\r\n    proposedChanges: [],\r\n  },\r\n  loadingParentDetails: false, // Loading state for parent metadata\r\n  isDropped: false, // Indicates whether an object has been dropped\r\n  selectedTableRows: [],\r\n};\r\n\r\nconst droppedObjectSlice = createSlice({\r\n  name: \"droppedObject\",\r\n  initialState,\r\n  reducers: {\r\n    setInitialDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData.initialDraggedData =\r\n        action.payload.initialDraggedData;\r\n    },\r\n    setDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData = {\r\n        ...state.droppedObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setPlantObjectData: (state, action) => {\r\n      state.plantObjectData = {\r\n        ...state.plantObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setProductChildren: (state, action) => {\r\n      state.plantObjectData.productChildren = action.payload;\r\n    },\r\n    setProposedChanges: (state, action) => {\r\n      state.plantObjectData.proposedChanges = action.payload;\r\n    },\r\n    setHeaders: (state, action) => {\r\n      state.plantObjectData.headers = action.payload;\r\n    },\r\n    setCAName: (state, action) => {\r\n      state.plantObjectData.CAName = action.payload;\r\n    },\r\n\r\n    setParentDetailsLoading: (state, action) => {\r\n      state.loadingParentDetails = action.payload;\r\n    },\r\n    setIsDropped: (state, action) => {\r\n      state.isDropped = action.payload;\r\n    },\r\n    setSelectedTableRows: (state, action) => {\r\n      state.selectedTableRows = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setInitialDroppedObjectData,\r\n  setDroppedObjectData,\r\n  setPlantObjectData,\r\n  setProductChildren,\r\n  setCAName,\r\n  setHeaders,\r\n  setParentDetailsLoading,\r\n  setIsDropped,\r\n  setSelectedTableRows,\r\n  setProposedChanges,\r\n} = droppedObjectSlice.actions;\r\nexport default droppedObjectSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport droppedObjectReducer from \"./droppedObjectSlice\";\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    droppedObject: droppedObjectReducer,\r\n  },\r\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n","// utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://emr-product-datahub-server-sap-stage.azurewebsites.net', // Your API base URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default api;","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { initWidget } from \"./lib/widget\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { SecurityContext } from \"./services/api/droppableService\";\r\nimport RevisionFloat from \"./pages/revisionFloat/revisionFloat\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\n\r\n// This function mounts the React app.\r\nlet root; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") || document.getElementById(\"root\");\r\n  \r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    console.log(\"[index.js] Root element found.\");\r\n  }\r\n  \r\n  if (!root) {\r\n    console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n   <div>Hi i am new {console.log(\"new app not rerendering\")}</div>\r\n  );\r\n  console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n\r\nexport default function () {\r\n  // When the widget fires the onLoad event, mount the React app.\r\n  window.widget.addEvent(\"onLoad\", () => {\r\n    start();\r\n  });\r\n\r\n  // When the widget fires the onRefresh event, reload the page.\r\n  window.widget.addEvent(\"onRefresh\", () => {\r\n    window.location.reload();\r\n  });\r\n\r\n  // Log a message when the widget's preferences have been edited.\r\n  window.widget.addEvent(\"endEdit\", () => {\r\n    console.log(\"Preferences have been edited\");\r\n  });\r\n}\r\n\r\n"],"names":["droppedObjectSlice","createSlice","name","initialState","droppedObjectData","initialDraggedData","cardData","versions","parentDetails","ownerData","plantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","CAName","headers","proposedChanges","loadingParentDetails","isDropped","selectedTableRows","reducers","setInitialDroppedObjectData","state","action","payload","setDroppedObjectData","_objectSpread","setPlantObjectData","setProductChildren","setProposedChanges","setHeaders","setCAName","setParentDetailsLoading","setIsDropped","setSelectedTableRows","actions","configureStore","reducer","droppedObject","droppedObjectReducer","axios","create","baseURL","root","window","widget","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","console","log","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","_jsxs","children","start","location","reload"],"sourceRoot":""}
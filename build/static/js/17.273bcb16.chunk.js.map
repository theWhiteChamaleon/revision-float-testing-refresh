{"version":3,"file":"static/js/17.273bcb16.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/List/List.jsx","components/Card/Card.jsx","components/DragAndDrop/DragAndDropStandAlone.jsx","components/Card/cardwithdraganddrop.jsx","components/SearchInput/SearchInput.jsx","hooks/useInterComSearch.js","components/DragAndDrop/DragAndDrop.jsx","components/Loader/Loader.js","components/Table/DraggableColumnHeader.jsx","components/Table/DraggableCellComponent.jsx","components/Table/Table.jsx","hooks/useDroppableArea.js","hooks/useRevisions.js","hooks/useToast.js","services/api/droppableService.js","services/api/refreshService.js","store/droppedObjectSlice.js","store/index.js","utils/api.js","utils/helpers.js","utils/toastMessages.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./List.css\";\r\nimport { makeDraggable } from \"../../utils/helpers\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst List = ({ data, isColumn, onDragStart, onDragEnd }) => {\r\n  const titleRef = useRef(null);\r\n  const initialDraggedData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData.initialDraggedData\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (titleRef.current && initialDraggedData) {\r\n      makeDraggable(\r\n        titleRef.current,\r\n        initialDraggedData,\r\n        onDragStart,\r\n        onDragEnd\r\n      );\r\n    }\r\n  }, [data, initialDraggedData, onDragStart, onDragEnd]);\r\n\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <div className={`d-flex ${isColumn ? \"flex-column\" : \"flex-row\"}`}>\r\n      <h5\r\n        ref={titleRef}\r\n        className={`mb-1 text-start title ${!isColumn ? \"me-2\" : \"\"}`}\r\n      >\r\n        {data.title}\r\n      </h5>\r\n      <ul\r\n        className={`list-group d-flex flex-row flex-sm-row flex-wrap justify-content-between pb-3 pb-md-0 ${\r\n          !isColumn ? \"w-75\" : \"\"\r\n        }`}\r\n      >\r\n        <li\r\n          className={`list-group-item flex-grow-1 text-start mx-0 ps-0 pb-0 ${\r\n            !isColumn ? \"d-flex flex-row justify-content-around\" : \"\"\r\n          }`}\r\n          style={{ border: \"0\" }}\r\n        >\r\n          <p>\r\n            <b>Type:</b>{\" \"}\r\n            <span className=\"list-text\" title={data.type}>\r\n              {data.type}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <b>Owner:</b>{\" \"}\r\n            <span className=\"list-text\" title={data.owner}>\r\n              {data.owner}\r\n            </span>\r\n          </p>\r\n          {isColumn && (\r\n            <p>\r\n              <b>Maturity State:</b>{\" \"}\r\n              <span className=\"list-text\" title={data[\"Maturity State\"]}>\r\n                {data[\"Maturity State\"]}\r\n              </span>\r\n            </p>\r\n          )}\r\n        </li>\r\n        {isColumn && (\r\n          <li\r\n            className=\"list-group-item flex-grow-1 text-start mx-0 pt-0\"\r\n            style={{ border: \"0\", paddingLeft: \"0\" }}\r\n          >\r\n            <p>\r\n              <b>Dropped Revision :</b>{\" \"}\r\n              <span className=\"list-text\" title={data[\"Dropped Revision\"]}>\r\n                {data[\"Dropped Revision\"]}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <b>Latest Released Revision:</b>{\" \"}\r\n              <span\r\n                className=\"list-text\"\r\n                title={data[\"Latest Released Revision\"]}\r\n              >\r\n                {data[\"Latest Released Revision\"]}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <b>Collabspace:</b>{\" \"}\r\n              <span\r\n                className=\"list-text\"\r\n                title={data[\"Collaborative Space Title\"]}\r\n              >\r\n                {data[\"Collaborative Space Title\"]}\r\n              </span>\r\n            </p>\r\n          </li>\r\n        )}\r\n\r\n        <li\r\n          className={`list-group-item flex-grow-1 text-start mx-0 ${\r\n            !isColumn ? \"d-flex flex-row\" : \"\"\r\n          }`}\r\n          style={{ border: \"0\", paddingLeft: \"0\" }}\r\n        >\r\n          {data.type !== \"Document\" && (\r\n            <>\r\n              <p>\r\n                <b>CAD Format:</b>{\" \"}\r\n                <span className=\"list-text\" title={data[\"CAD Format\"]}>\r\n                  {data[\"CAD Format\"]}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                <b>EIN:</b>{\" \"}\r\n                <span className=\"list-text\" title={data.EIN}>\r\n                  {data.EIN}\r\n                </span>\r\n              </p>\r\n            </>\r\n          )}\r\n        </li>\r\n\r\n        <div className=\"d-none d-md-flex align-items-stretch\">\r\n          <div className=\"vr\"></div>\r\n        </div>\r\n\r\n        {/* Horizontal divider after third li on small screens */}\r\n        <div className=\"d-flex d-md-none w-100\">\r\n          <hr className=\"w-100\" />\r\n        </div>\r\n\r\n        <li\r\n          className=\"list-group-item flex-grow-1 text-start mx-0\"\r\n          style={{ border: \"0\" }}\r\n        >\r\n          <p className=\"description-container\" title={data.Description}>\r\n            {data.Description}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Image, Card, CardBody } from \"react-bootstrap\";\r\nimport List from \"../List/List\";\r\n\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CardComponent = ({ data, onDragStart, onDragEnd }) => {\r\n  const [isColumn, setIsColumn] = useState(true);\r\n\r\n  const toggleFlexDirection = () => {\r\n    setIsColumn(!isColumn);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"d-flex flex-row mt-4 border-0 \" style={{ width: \"100%\" }}>\r\n      <div className=\"pb-3 d-none d-md-block me-5 ms-4\">\r\n        <Card.Img\r\n          className={`${\r\n            !isColumn ? \"image-resize img-thumbnail\" : \"img-thumbnail\"\r\n          } `}\r\n          src={data.imageURL} // Use dynamic image URL from data\r\n          alt=\"Card image\"\r\n        />\r\n      </div>\r\n      <CardBody className={`${!isColumn ? \"p-0 layout-change\" : \"p-0\"} `}>\r\n        <List\r\n          data={data}\r\n          isColumn={isColumn}\r\n          onDragStart={onDragStart}\r\n          onDragEnd={onDragEnd}\r\n        />\r\n      </CardBody>\r\n      <button\r\n        className=\"me-2 p-0 btn btn-link accordion-toggle\"\r\n        onClick={toggleFlexDirection}\r\n      >\r\n        {/* <FontAwesomeIcon\r\n          icon={faAngleUp}\r\n          size=\"xs\"\r\n          style={{ color: \"#212121\" }}\r\n          className={`rotatable ${isColumn ? \"rotated\" : \"\"}`}\r\n        /> */}\r\n\r\n        <Image\r\n          src=\"https://khanfarzan17.github.io/tedting-revision-float/images/arrow.png\"\r\n          alt=\"downArrow\"\r\n          className={`rotatable ${isColumn ? \"rotated\" : \"\"}`}\r\n        />\r\n      </button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropStandAlone = () => {\r\n  const { initializeDroppableArea } = useDroppableArea();\r\n  const hasInitializedDroppable = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const checkAndInitialize = () => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer && !hasInitializedDroppable.current) {\r\n        console.log(\r\n          \"[DragAndDropStandAlone] ✅ Droppable container found. Initializing...\"\r\n        );\r\n        initializeDroppableArea();\r\n        hasInitializedDroppable.current = true;\r\n      } else {\r\n        console.warn(\r\n          \"[DragAndDropStandAlone] ❌ Droppable container not found yet.\"\r\n        );\r\n        setTimeout(checkAndInitialize, 100); // Retry in 100ms\r\n      }\r\n    };\r\n\r\n    checkAndInitialize(); // Start checking\r\n  }, [initializeDroppableArea]);\r\n  return (\r\n    <>\r\n      <div className=\"droppable-container mt-4\">\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropStandAlone;\r\n","import React, { useState } from \"react\";\r\nimport DragAndDropStandAlone from \"../DragAndDrop/DragAndDropStandAlone\";\r\nimport CardComponent from \"./Card\";\r\n\r\nconst CardWithDragAndDrop = ({ data }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const handleDragStart = () => {\r\n    console.log(\"handleDragStart called\"); \r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    console.log(\"handleDragEnd called\"); \r\n    console.log(\"Before setIsDragging(false) - isDragging:\", isDragging); \r\n    setIsDragging(false);\r\n    console.log(\"After setIsDragging(false) - isDragging:\", isDragging);\r\n  };\r\n  return (\r\n    <div className={`card-with-drag-and-drop ${isDragging ? \"dragging\" : \"\"}`}>\r\n      <DragAndDropStandAlone />\r\n      <CardComponent\r\n        data={data}\r\n        onDragStart={handleDragStart}\r\n        onDragEnd={handleDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardWithDragAndDrop;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport \"./SearchInput.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchInput = ({ onSearch, disabled }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newSearchText = event.target.value;\r\n    setSearchText(newSearchText);\r\n  };\r\n\r\n  const handleInputKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setSearchText(\"\");\r\n    inputRef.current.focus(); // Keep focus on the input after clearing\r\n  };\r\n  const handleSearchIconClick = () => {\r\n    if (searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-content-container d-flex align-items-center\">\r\n      <FontAwesomeIcon\r\n        icon={faMagnifyingGlass}\r\n        onClick={handleSearchIconClick}\r\n        className=\"search-icon\"\r\n      />\r\n\r\n      <span className=\"ms-4 drag-and-drop-text flex-grow-1\">\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            value={searchText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyPress}\r\n            placeholder=\"Search...\"\r\n            disabled={disabled}\r\n          />\r\n          {searchText && (\r\n            <Button\r\n              variant=\"btn-link\"\r\n              onClick={handleClearClick}\r\n              className=\"clear-button\"\r\n            >\r\n              ✖\r\n            </Button>\r\n          )}\r\n        </InputGroup>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { loadInterCom } from \"../utils/helpers\";\r\n\r\nconst useInterComSearch = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [InterCom, setInterCom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // console.log(\"[useInterComSearch] Loading InterCom module\");\r\n        const interComInstance = await loadInterCom();\r\n        setInterCom(interComInstance);\r\n      } catch (error) {\r\n        console.error(\r\n          \"[useInterComSearch] Error initializing InterCom:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        // console.log(\"[useInterComSearch] Socket disconnected\");\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const performSearch = useCallback(\r\n    (searchText, searchOpts, onObjectsSelected) => {\r\n      // Check if InterCom is loaded\r\n      if (!InterCom) {\r\n        console.warn(\"[useInterComSearch] InterCom is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      const socketName =\r\n        \"socket\" + new Date().toISOString().replace(/[-:]/g, \"\");\r\n      const newSocket = new InterCom.Socket(socketName, {\r\n        dispatchRetryInternal: 0,\r\n      });\r\n      newSocket.subscribeServer(\"SearchComServer\");\r\n      setSocket(newSocket);\r\n\r\n      console.log(\r\n        \"[useInterComSearch] performSearch called with:\",\r\n        searchText,\r\n        searchOpts\r\n      );\r\n\r\n      const widgetId = window.widget?.id;\r\n      // console.log(\"[useInterComSearch] widget id:\", widgetId);\r\n\r\n      const finalSearchOpts = {\r\n        ...searchOpts,\r\n        widget_id: widgetId,\r\n        app_socket_id: socketName,\r\n        default_search_criteria: searchText,\r\n      };\r\n\r\n      // Register the search context (if needed)\r\n      console.log(\r\n        \"[useInterComSearch] Dispatching RegisterContext event with:\",\r\n        finalSearchOpts\r\n      );\r\n      newSocket.dispatchEvent(\"RegisterContext\", finalSearchOpts);\r\n\r\n      // Dispatch the search event\r\n      // console.log(\r\n      //   \"[useInterComSearch] Dispatching InContextSearch event with:\",\r\n      //   finalSearchOpts\r\n      // );\r\n      newSocket.dispatchEvent(\"InContextSearch\", finalSearchOpts);\r\n\r\n      // Add a listener for search results\r\n      const handleSearchResults = (data) => {\r\n        console.log(\"[useInterComSearch] Search results received:\", data);\r\n        if (onObjectsSelected) {\r\n          onObjectsSelected(data);\r\n        }\r\n      };\r\n\r\n      console.log(\r\n        \"[useInterComSearch] Adding listener for Selected_Objects_search\"\r\n      );\r\n      newSocket.addListener(\"Selected_Objects_search\", handleSearchResults);\r\n    },\r\n    [InterCom]\r\n  );\r\n\r\n  return {\r\n    performSearch,\r\n  };\r\n};\r\n\r\nexport default useInterComSearch;\r\n","import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const {  handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      console.log(\"Selected objects:\", selectedObjects);\r\n      console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"droppable-container mt-4\"\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { flexRender } from \"@tanstack/react-table\";\r\n\r\nconst DraggableColumnHeader = ({ header, columns, table }) => {\r\n  const isFixed = header.column.id === \"selection\";\r\n  const isPinned = table\r\n    .getState()\r\n    .columnPinning.left.includes(header.column.id);\r\n  const className = isFixed ? \"is-fixed\" : isPinned ? \"is-pinned\" : \"\";\r\n  const sortable = useSortable({\r\n    id: header.column.id,\r\n    disabled: header.column.id === \"selection\" || header.column.id === \"EIN\",\r\n  });\r\n\r\n  const { attributes, listeners, setNodeRef, transform, isDragging } = isFixed\r\n    ? {\r\n        attributes: {},\r\n        listeners: {},\r\n        setNodeRef: null,\r\n        transform: null,\r\n        isDragging: false,\r\n      }\r\n    : sortable;\r\n\r\n  const style = {\r\n    opacity: isDragging ? 0.8 : 1,\r\n    position: \"sticky\",\r\n    top: 0,\r\n    left: isFixed ? 0 : isPinned ? \"var(--pinned-left)\" : \"auto\",\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"width transform 0.2s ease-in-out\",\r\n    width: header.getSize(),\r\n    zIndex: isFixed ? 5 : isPinned ? 4 : 3,\r\n    cursor: isFixed ? \"default\" : \"move\",\r\n    backgroundColor: \"#f2f2f2\",\r\n  };\r\n\r\n  return (\r\n    <th\r\n      ref={setNodeRef}\r\n      style={style}\r\n      data-fixed={isFixed}\r\n      data-pinned={isPinned}\r\n      className={className}\r\n    >\r\n      <div\r\n        className=\"d-flex align-items-center header-content\"\r\n        {...(!isFixed ? { ...attributes, ...listeners } : {})}\r\n      >\r\n        <div\r\n          className=\"flex-grow-1\"\r\n          onClick={header.column.getToggleSortingHandler()}\r\n        >\r\n          {header.isPlaceholder\r\n            ? null\r\n            : flexRender(header.column.columnDef.header, header.getContext())}\r\n          {header.column.getIsSorted() === \"asc\" ? (\r\n            <span className=\"icon\">↑</span>\r\n          ) : header.column.getIsSorted() === \"desc\" ? (\r\n            <span className=\"icon\">↓</span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div\r\n        {...{\r\n          onDoubleClick: () => header.column.resetSize(),\r\n          onMouseDown: header.getResizeHandler(),\r\n          onTouchStart: header.getResizeHandler(),\r\n          className: `Resizer ${\r\n            header.column.getIsResizing() ? \"isResizing\" : \"\"\r\n          }`,\r\n        }}\r\n      />\r\n    </th>\r\n  );\r\n};\r\n\r\nexport default DraggableColumnHeader;\r\n","import React from \"react\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { flexRender } from \"@tanstack/react-table\";\r\n\r\nconst DraggableCell = ({ cell, columns }) => {\r\n  const isFixed = cell.column.id === \"selection\";\r\n  const isPinned = cell.column.getIsPinned();\r\n  const className = isFixed ? \"is-fixed\" : isPinned ? \"is-pinned\" : \"\";\r\n  const cellContent = flexRender(cell.column.columnDef.cell, cell.getContext());\r\n\r\n  const sortable = useSortable({\r\n    id: cell.column.id,\r\n    disabled: isFixed,\r\n  });\r\n\r\n  const { setNodeRef, transform, isDragging } = isFixed\r\n    ? { setNodeRef: null, transform: null, isDragging: false }\r\n    : sortable;\r\n\r\n  const style = {\r\n    opacity: isDragging ? 0.8 : 1,\r\n    position: isFixed || isPinned ? \"sticky\" : \"relative\",\r\n    left: isFixed ? 0 : \"auto\",\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"width transform 0.2s ease-in-out\",\r\n    width: cell.column.getSize(),\r\n    zIndex: isFixed ? 2 : isDragging ? 1 : isPinned ? 2 : 0,\r\n  };\r\n\r\n  return (\r\n    <td\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className={className}\r\n      title={isFixed ? \"\" : `${cell.getValue()}`}\r\n    >\r\n      {isFixed ? (\r\n        cellContent\r\n      ) : (\r\n        <div className=\"cell-content\">{cellContent}</div>\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default DraggableCell;\r\n","import React, { useMemo, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  useReactTable,\r\n  getCoreRowModel,\r\n  getSortedRowModel,\r\n} from \"@tanstack/react-table\";\r\nimport {\r\n  DndContext,\r\n  KeyboardSensor,\r\n  MouseSensor,\r\n  TouchSensor,\r\n  closestCenter,\r\n  useSensor,\r\n  useSensors,\r\n} from \"@dnd-kit/core\";\r\nimport { restrictToHorizontalAxis } from \"@dnd-kit/modifiers\";\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  horizontalListSortingStrategy,\r\n} from \"@dnd-kit/sortable\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./Table.css\";\r\nimport CustomButton from \"../Button/Button\";\r\nimport { setSelectedTableRows } from \"../../store/droppedObjectSlice\";\r\nimport { handleExportExcel } from \"../../utils/helpers\";\r\nimport { getRowRange } from \"../../utils/helpers\";\r\nimport DraggableColumnHeader from \"./DraggableColumnHeader\";\r\nimport DraggableCell from \"./DraggableCellComponent\";\r\nconst ReusableTable = ({\r\n  columns,\r\n  data,\r\n  editable = false,\r\n  meta,\r\n  widgetType,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [tableData, setTableData] = useState(data);\r\n  const [rowSelection, setRowSelection] = useState({});\r\n  const [lastSelectedId, setLastSelectedId] = useState(null); // Track last clicked row\r\n  const tableRef = useRef(null);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (e) => {\r\n      setIsScrolled(e.target.scrollTop > 0);\r\n    };\r\n\r\n    const tableContainer = tableRef.current;\r\n    if (tableContainer) {\r\n      tableContainer.addEventListener(\"scroll\", handleScroll);\r\n    }\r\n\r\n    return () => {\r\n      if (tableContainer) {\r\n        tableContainer.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // const { updateTableData } = meta;\r\n\r\n  // Modified columnOrder initialization to check localStorage\r\n  const [columnOrder, setColumnOrder] = useState(() => {\r\n    // Try to get stored column order from localStorage\r\n    const storedOrder = localStorage.getItem(\"tableColumnOrder\");\r\n\r\n    if (storedOrder) {\r\n      return JSON.parse(storedOrder);\r\n    }\r\n\r\n    // Default order if nothing in localStorage\r\n    const initialOrder = [\"selection\"];\r\n    const otherColumns = columns.map((col) => col.id || col.accessorKey);\r\n    initialOrder.push(...otherColumns);\r\n    return initialOrder;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tableColumnOrder\", JSON.stringify(columnOrder));\r\n  }, [columnOrder]);\r\n\r\n  // Store default column order for reset functionality\r\n  const defaultColumnOrder = useMemo(() => {\r\n    const initialOrder = [\"selection\"];\r\n    const otherColumns = columns.map((col) => col.id || col.accessorKey);\r\n    initialOrder.push(...otherColumns);\r\n    return initialOrder;\r\n  }, [columns]);\r\n\r\n  const handleEditCell = (rowIndex, columnId, value) => {\r\n    const updatedData = tableData.map((row, index) =>\r\n      index === rowIndex ? { ...row, [columnId]: value } : row\r\n    );\r\n    console.log(\"[Table] Updated Table Data:\", updatedData);\r\n\r\n    // Call the meta function to update external data if needed\r\n    if (meta?.updateTableData) {\r\n      meta.updateTableData(updatedData);\r\n    }\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  // Initialize columnPinning based on column definitions\r\n  const initialColumnPinning = useMemo(() => {\r\n    const pinnedColumns = { left: [\"selection\", \"EIN \"] };\r\n    columns.forEach((column) => {\r\n      if (column.columnPinning) {\r\n        pinnedColumns.left.push(column.id || column.accessorKey);\r\n      }\r\n    });\r\n    return pinnedColumns;\r\n  }, [columns]);\r\n\r\n  // Enhance columns for editable functionality and add checkbox selection\r\n  const enhancedColumns = useMemo(() => {\r\n    const selectionColumn = {\r\n      id: \"selection\",\r\n      header: ({ table }) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          ref={(el) => {\r\n            if (el) {\r\n              el.indeterminate = table.getIsSomeRowsSelected();\r\n            }\r\n          }}\r\n          checked={table.getIsAllRowsSelected()}\r\n          onChange={table.getToggleAllRowsSelectedHandler()}\r\n        />\r\n      ),\r\n      cell: ({ row }) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          {...{\r\n            checked: row.getIsSelected(),\r\n            onChange: row.getToggleSelectedHandler(),\r\n          }}\r\n        />\r\n      ),\r\n    };\r\n\r\n    const baseColumns = editable\r\n      ? columns.map((column) => ({\r\n          ...column,\r\n          cell: column.editable\r\n            ? ({ row, getValue }) => (\r\n                <input\r\n                  className=\"input-cell\"\r\n                  value={getValue()}\r\n                  onChange={(e) =>\r\n                    handleEditCell(\r\n                      row.index,\r\n                      column.accessorKey,\r\n                      e.target.value\r\n                    )\r\n                  }\r\n                />\r\n              )\r\n            : column.cell,\r\n        }))\r\n      : columns;\r\n\r\n    return [selectionColumn, ...baseColumns];\r\n  }, [columns, editable]);\r\n\r\n  const sensors = useSensors(\r\n    useSensor(MouseSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    useSensor(TouchSensor, {\r\n      activationConstraint: {\r\n        delay: 200,\r\n        tolerance: 5,\r\n      },\r\n    }),\r\n    useSensor(KeyboardSensor, {})\r\n  );\r\n\r\n  // Modified handleDragEnd to save to localStorage\r\n  const handleDragEnd = (event) => {\r\n    const { active, over } = event;\r\n\r\n    if (active && over && active.id !== over.id) {\r\n      if (active.id !== \"selection\" && active.id !== \"EIN\") {\r\n        setColumnOrder((prevOrder) => {\r\n          const oldIndex = prevOrder.indexOf(active.id);\r\n          const newIndex = prevOrder.indexOf(over.id);\r\n          const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\r\n          return newOrder;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Add reset columns handler\r\n  const handleResetColumns = () => {\r\n    setColumnOrder(defaultColumnOrder);\r\n    localStorage.removeItem(\"tableColumnOrder\");\r\n  };\r\n\r\n  const table = useReactTable({\r\n    data: tableData,\r\n    columns: enhancedColumns,\r\n    state: {\r\n      rowSelection,\r\n      columnOrder,\r\n      columnPinning: initialColumnPinning,\r\n    },\r\n    onRowSelectionChange: setRowSelection,\r\n    onColumnOrderChange: setColumnOrder,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    enableRowSelection: true,\r\n    defaultColumn: {\r\n      size: 159,\r\n      minSize: 45,\r\n      maxSize: 500,\r\n    },\r\n    columnResizeMode: \"onChange\",\r\n    // meta: {\r\n    //   updateTableData, // Added this to the meta field to allow columns to update the table data\r\n    // },\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Get selected row data using table.getSelectedRowModel()\r\n    const selectedRows = table\r\n      .getSelectedRowModel()\r\n      .flatRows.map((row) => row.original);\r\n    // console.log(\"Selected Rows (TanStack Table):\", selectedRows);\r\n    dispatch(setSelectedTableRows(selectedRows)); // Update Redux store\r\n  }, [rowSelection, dispatch]); // Update when rowSelection changes\r\n\r\n  const columnSizeVars = useMemo(() => {\r\n    const headers = table.getFlatHeaders();\r\n    const colSizes = {};\r\n    for (let i = 0; i < headers.length; i++) {\r\n      const header = headers[i];\r\n      colSizes[`--header-${header.id}-size`] = header.getSize();\r\n      colSizes[`--col-${header.column.id}-size`] = header.column.getSize();\r\n    }\r\n    return colSizes;\r\n  }, [table.getState().columnSizingInfo, table.getState().columnSizing]);\r\n\r\n  const handleSelectAll = () => {\r\n    table.getToggleAllRowsSelectedHandler()({\r\n      target: { checked: true },\r\n    });\r\n  };\r\n\r\n  const handleDeselectAll = () => {\r\n    table.getToggleAllRowsSelectedHandler()({\r\n      target: { checked: false },\r\n    });\r\n  };\r\n\r\n  const handleExport = () => {\r\n    // Check if the widgetType is \"Revision_FLoat_Widget\" or \"Plantassignment\"//\r\n\r\n    // Otherwise, use handleExportExcel with the default file name \"table-data.xlsx\"//\r\n    console.log(\"Export buttton clicked\");\r\n    if (widgetType === \"Revision_FLoat_Widget\") {\r\n      handleExportExcel(data, \"Where Used Details.xlsx\");\r\n    } else if (widgetType === \"Plantassignment\") {\r\n      handleExportExcel(data, \"EAN_Manufacturing.xlsx\");\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (row, event) => {\r\n    const { rows, rowsById } = table.getRowModel();\r\n    if (event.shiftKey && lastSelectedId) {\r\n      try {\r\n        const rowsToToggle = getRowRange(rows, row.id, lastSelectedId);\r\n        const isLastSelected = rowsById[lastSelectedId].getIsSelected();\r\n        rowsToToggle.forEach((r) => r.toggleSelected(isLastSelected));\r\n      } catch (e) {\r\n        console.error(\"Multi-select with shift+click failed:\", e);\r\n      }\r\n    } else {\r\n      row.toggleSelected(!row.getIsSelected());\r\n    }\r\n    setLastSelectedId(row.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"toolkit my-3\">\r\n        <div className=\"d-flex justify-content-end button-container\">\r\n          <div className=\"d-flex\">\r\n            <CustomButton\r\n              variant=\"outline-primary\"\r\n              size=\"lg\"\r\n              onClick={handleSelectAll}\r\n              className=\"m-2\"\r\n              text=\"Select All\"\r\n            />\r\n\r\n            <CustomButton\r\n              variant=\"outline-secondary\"\r\n              size=\"lg\"\r\n              onClick={handleDeselectAll}\r\n              className=\"m-2\"\r\n              text=\"Deselect  All\"\r\n            />\r\n\r\n            <CustomButton\r\n              variant=\"outline-success\"\r\n              size=\"lg\"\r\n              onClick={handleExport}\r\n              className=\"m-2 border-bottom-10px\"\r\n              text=\"Export to CSV \"\r\n            />\r\n\r\n            <CustomButton\r\n              variant=\"outline-warning\"\r\n              size=\"lg\"\r\n              onClick={handleResetColumns}\r\n              className=\"m-2\"\r\n              text=\"Reset Columns\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"table-info\">\r\n        <p>{tableData.length} Items</p>\r\n      </div>\r\n      <DndContext\r\n        sensors={sensors}\r\n        collisionDetection={closestCenter}\r\n        modifiers={[restrictToHorizontalAxis]}\r\n        onDragEnd={handleDragEnd}\r\n      >\r\n        <div\r\n          ref={tableRef}\r\n          className={`table-responsive ${isScrolled ? \"is-scrolled\" : \"\"}`}\r\n        >\r\n          <table\r\n            className=\"table custom-table table-hover\"\r\n            style={{\r\n              ...columnSizeVars,\r\n              width: table.getTotalSize(),\r\n            }}\r\n          >\r\n            <thead>\r\n              {table.getHeaderGroups().map((headerGroup) => (\r\n                <tr key={headerGroup.id}>\r\n                  <SortableContext\r\n                    items={table.getVisibleLeafColumns().map((col) => col.id)}\r\n                    strategy={horizontalListSortingStrategy}\r\n                  >\r\n                    {headerGroup.headers.map((header) => (\r\n                      <DraggableColumnHeader\r\n                        key={header.id}\r\n                        header={header}\r\n                        columns={columns}\r\n                        table={table}\r\n                      />\r\n                    ))}\r\n                  </SortableContext>\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n\r\n            <tbody>\r\n              {table.getRowModel().rows.length > 0 &&\r\n                table.getRowModel().rows.map((row) => (\r\n                  <tr\r\n                    key={row.id}\r\n                    onClick={(event) => handleRowClick(row, event)}\r\n                    className={rowSelection[row.id] ? \"row-selected\" : \"\"}\r\n                  >\r\n                    <SortableContext\r\n                      items={table.getVisibleLeafColumns().map((col) => col.id)}\r\n                      strategy={horizontalListSortingStrategy}\r\n                    >\r\n                      {row.getVisibleCells().map((cell) => (\r\n                        <DraggableCell\r\n                          key={cell.id}\r\n                          cell={cell}\r\n                          columns={columns}\r\n                        />\r\n                      ))}\r\n                    </SortableContext>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </DndContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReusableTable;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport useRevisions from \"./useRevisions\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  // fetchCsrfTokenAndDependencies as fetchCsrfService,\r\n  getDroppedObjectDetails,\r\n  // fetchCardOwnerDetails as fetchCardOwnerDetailsService,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\nimport { batch } from \"react-redux\";\r\nimport store from \"../store\";\r\n\r\nconst useDroppableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { fetchRevisionsAndParents } = useRevisions();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Fetch Revisions and Parents in parallel\r\n          const relativePath = objectDetailsResult.data.cardData.relativePath;\r\n          const [revisionParentData] = await Promise.all([\r\n            fetchRevisionsAndParents(\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              relativePath\r\n            ),\r\n          ]);\r\n          // Dispatch all updates together (batching updates)\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n              parentDetails: revisionParentData || [],\r\n            })\r\n          );\r\n\r\n          console.log(\"[fetchObjectDetails] ✅ Redux store updated.\");\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, fetchRevisionsAndParents, showErrorToast]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\"VPMReference\", \"Document\", \"Raw_Material\"];\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            setLoading(false);\r\n            return;\r\n          }\r\n          dispatch(setIsDroppedAction(true));\r\n          setLoading(true); // Start loading state\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        setLoading(false);\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    dispatch(setIsDroppedAction(false));\r\n\r\n    let attempts = 0;\r\n    const maxAttempts = 50;\r\n    const checkInterval = 100; // Retry every 100ms\r\n\r\n    const checkAndInit = () => {\r\n      const droppableContainers = [\r\n        ...document.querySelectorAll(\".droppable-container\"),\r\n      ];\r\n\r\n      if (droppableContainers.length > 0) {\r\n        console.log(\r\n          \"[initializeDroppableArea] ✅ Found droppable containers, initializing...\"\r\n        );\r\n\r\n        droppableContainers.forEach((container) => {\r\n          initDroppable(container, handleDrop, dispatch, showErrorToast);\r\n        });\r\n\r\n        return; // Stop retrying after success\r\n      }\r\n\r\n      attempts++;\r\n      if (attempts < maxAttempts) {\r\n        console.warn(\r\n          `[initializeDroppableArea] ⚠️ Attempt ${attempts}: No droppable containers found.`\r\n        );\r\n        setTimeout(checkAndInit, checkInterval); // Retry again\r\n      } else {\r\n        console.error(\r\n          \"[initializeDroppableArea] ❌ Max attempts reached. Droppable initialization failed.\"\r\n        );\r\n      }\r\n    };\r\n\r\n    checkAndInit(); // Start checking\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDroppableArea;\r\n","import useToast from \"../hooks/useToast\";\r\n\r\nimport api from \"../utils/api\"; // Import axios instance\r\nimport { MSG_REPLACE_SUCCESS, MSG_REPLACE_ERROR } from \"../utils/toastMessages\";\r\n\r\nconst useRevisions = () => {\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  const fetchRevisionsAndParents = async (\r\n    objectId,\r\n    objectType,\r\n    relativePath\r\n  ) => {\r\n    if (!relativePath) {\r\n      console.error(\"[Fetch Revisions] ❌ Missing relative path.\");\r\n      return;\r\n    }\r\n\r\n    const parentURL = `/revFloat/getParents`;\r\n\r\n    try {\r\n      // Use the axios instance to make the POST request\r\n      const response = await api.post(parentURL, {\r\n        data: {\r\n          id: objectId,\r\n          type: objectType,\r\n          relativePath: relativePath,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const parentDetails = response.data;\r\n\r\n        // 🚀 Return data instead of dispatching\r\n        return parentDetails;\r\n      } else {\r\n        throw new Error(\r\n          `[Fetch Revisions] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[Fetch Revisions] ❌ Error occurred:\", error);\r\n      return null; // Ensure it returns null on error\r\n    }\r\n  };\r\n\r\n  const replaceRevisions = async (selectedParents, droppedData, userEmail) => {\r\n    const parentURL = `/revFloat/floatRevisions`; // Use relative path for axios\r\n\r\n    try {\r\n      // Make the POST request to the replacement API\r\n      const response = await api.post(parentURL, {\r\n        SelectedParents: selectedParents,\r\n        DroppedData: droppedData,\r\n        userEmail: userEmail,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Handle successful replacement\r\n        console.log(\"Replacement successful:\", response.data);\r\n        showSuccessToast(MSG_REPLACE_SUCCESS); // Show success toast\r\n        // You might want to update the Redux store or refetch data here\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(\r\n          `[Replacement API] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during replacement:\", error);\r\n      showErrorToast(MSG_REPLACE_ERROR); // Show error toast\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  return { fetchRevisionsAndParents, replaceRevisions };\r\n};\r\n\r\nexport default useRevisions;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import { callwebService } from \"../../utils/helpers\";\r\nimport { setInitialDroppedObjectData } from \"../../store/droppedObjectSlice\";\r\nimport api from \"../../utils/api\";\r\nimport { MSG_MULTIPLE_OBJECTS_DROPPED } from \"../../utils/toastMessages\";\r\nimport store from \"../../store\";\r\n\r\nexport const initializeDroppableArea = (\r\n  droppableContainers,\r\n  handleDrop,\r\n  dispatch,\r\n  showErrorToast\r\n) => {\r\n  console.log(\"[initDroppable] Initializing droppable for container:\", droppableContainers);\r\n  if (!droppableContainers) {\r\n    console.error(\"[initDroppable] ❌ No valid droppable container provided.\");\r\n    return;\r\n  }\r\n    // Ensure we always have an array (even for a single element)\r\n     // Ensure droppableContainers is always an array\r\n  const containers = NodeList.prototype.isPrototypeOf(droppableContainers)\r\n  ? [...droppableContainers]\r\n  : Array.isArray(droppableContainers)\r\n  ? droppableContainers\r\n  : [droppableContainers];\r\n  window.require([\"DS/DataDragAndDrop/DataDragAndDrop\"], (DataDragAndDrop) => {\r\n    containers.forEach((container) => {\r\n      DataDragAndDrop.droppable(container, {\r\n        drop: (data) => {\r\n          console.log(\"[DragAndDrop] Drop event:\", data);\r\n          const parsedData = JSON.parse(data);\r\n          const dataItems = parsedData.data.items;\r\n          // Check if more than one object is being dropped\r\n          if (dataItems.length > 1) {\r\n            showErrorToast(MSG_MULTIPLE_OBJECTS_DROPPED);\r\n            container.classList.remove(\"drag-over\");\r\n            return; // Stop further execution\r\n          }\r\n          const currentState =\r\n            store.getState().droppedObject.initialDraggedData;\r\n          const isSameData =\r\n            JSON.stringify(currentState) === JSON.stringify(parsedData);\r\n          if (!isSameData) {\r\n            dispatch(\r\n              setInitialDroppedObjectData({\r\n                initialDraggedData: parsedData, // ✅ Only update if different\r\n              })\r\n            );\r\n          } else {\r\n            console.log(\r\n              \"[initializeDroppableArea] Data unchanged. Skipping dispatch.\"\r\n            );\r\n          }\r\n          handleDrop(dataItems);\r\n          container.classList.remove(\"drag-over\");\r\n        },\r\n        enter: () => {\r\n          container.classList.add(\"drag-over\");\r\n        },\r\n        out: () => {\r\n          container.classList.remove(\"drag-over\");\r\n        },\r\n        leave: () => {\r\n          container.classList.remove(\"drag-over\");\r\n        },\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n// export const fetchCsrfTokenAndDependencies = async ({\r\n//   dataItems,\r\n//   setCsrfHeaders,\r\n//   onSuccess,\r\n//   onError,\r\n// }) => {\r\n//   try {\r\n//     const WAFData = await loadWAFData();\r\n//     const csrfURL= process.env.REACT_APP_CSRF_URL\r\n//     const response = await new Promise((resolve, reject) => {\r\n//       WAFData.authenticatedRequest(csrfURL, {\r\n//         method: \"GET\",\r\n//         type: \"json\",\r\n//         onComplete: resolve,\r\n//         onFailure: reject,\r\n//       });\r\n//     });\r\n// // Revision Float\r\n//     const csrfToken = response.csrf.name;\r\n//     const csrfValue = response.csrf.value;\r\n//     const securityContextHeader = \"SecurityContext\";\r\n//     const securityContextValue =\r\n//       \"ctx%3A%3AVPLMProjectLeader.BU-0000001.Rosemount%20Flow\";\r\n\r\n//     const headers = {\r\n//       [csrfToken]: csrfValue,\r\n//       [securityContextHeader]: securityContextValue,\r\n//     };\r\n\r\n//     if (setCsrfHeaders) setCsrfHeaders(headers);\r\n\r\n//     if (onSuccess) onSuccess(headers, dataItems); // Pass both headers and dataItems\r\n//   } catch (error) {\r\n//     console.error(\"[CSRF] Failed to fetch token:\", error);\r\n\r\n//     if (onError) onError(error);\r\n//   }\r\n// };\r\n\r\nexport const getDroppedObjectDetails = async ({ dataItems }) => {\r\n  try {\r\n    if (!dataItems || dataItems.length === 0) {\r\n      console.error(\"[Object Details] No items to fetch.\");\r\n      return;\r\n    }\r\n    const objectId = dataItems[0]?.objectId;\r\n    const type = dataItems[0]?.objectType;\r\n\r\n    if (!objectId || !type) {\r\n      throw new Error(\"[Object Details] Missing or invalid object ID or type\");\r\n    }\r\n\r\n    // Use the axios instance to make the GET request\r\n    const objectDetailsURL = `/revFloat/getDroppedObjectDetails?oid=${objectId}&type=${type}`;\r\n    const response = await api.get(objectDetailsURL);\r\n\r\n    // Use response.status instead of response.ok\r\n    if (response.status === 200) {\r\n      return {\r\n        success: true,\r\n        data: {\r\n          cardData: response.data, // Axios automatically parses JSON\r\n        },\r\n      };\r\n    } else {\r\n      throw new Error(\r\n        `[Object Details] HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\"[Object Details] Failed to fetch data:\", error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n// export const fetchCardOwnerDetails = async ({ dataItems, headers }) => {\r\n//   try {\r\n//     if (!dataItems || dataItems.length === 0) {\r\n//       console.error(\"[Card Owner Details] No items to fetch.\");\r\n//       return;\r\n//     }\r\n\r\n//     const objectID = dataItems[0]?.objectId;\r\n//     if (!objectID) {\r\n//       console.error(\"[Card Owner Details] Missing or invalid object ID:\", dataItems);\r\n//       return;\r\n//     }\r\n\r\n//     // Construct the URL dynamically\r\n//     const cardOwnerDetailsURL = `${process.env.REACT_APP_CARD_OWNER_DETAILS_URL_BASE}/${objectID}?xrequestedwith=xmlhttprequest`;\r\n\r\n//     const WAFData = await loadWAFData();\r\n//     const response = await new Promise((resolve, reject) => {\r\n//       WAFData.authenticatedRequest(cardOwnerDetailsURL, {\r\n//         method: \"GET\",\r\n//         headers,\r\n//         type: \"json\",\r\n//         onComplete: resolve,\r\n//         onFailure: reject,\r\n//       });\r\n//     });\r\n\r\n//     return {\r\n//       success: true,\r\n//       data: {\r\n//         ownerData: {\r\n//           cardownerdata: response.data,\r\n//         },\r\n//       },\r\n//     };\r\n//   } catch (error) {\r\n//     console.error(\"[Card Owner Details] Failed to fetch data:\", error);\r\n//     return { success: false, error };\r\n//   }\r\n// };\r\n\r\nexport const SecurityContext = async () => {\r\n  let email = \"\";\r\n\r\n  let securitycontextpreference = {\r\n    name: \"Credentials\",\r\n    type: \"list\",\r\n    label: \"Credentials\",\r\n    options: [],\r\n    defaultValue: \"\",\r\n  };\r\n\r\n  let urlObjWAF =\r\n    \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/modeler/pno/person?current=true&select=collabspaces&select=preferredcredentials&select=email\";\r\n  let response = await callwebService(\"GET\", urlObjWAF, \"\");\r\n\r\n  // console.log(\"Response for Preferences:\", response);\r\n  if (response.status) {\r\n    if (response.output.collabspaces) {\r\n      response.output.collabspaces.forEach((collabspace) => {\r\n        let organization = collabspace.name.trim();\r\n        let couples = collabspace.couples;\r\n        couples.forEach((couple) => {\r\n          //MSOL-Micro Motion ● Measurement Solutions ● Leader\r\n          const SecurityContextStr =\r\n            couple.role.name +\r\n            \".\" +\r\n            couple.organization.name +\r\n            \".\" +\r\n            organization;\r\n          const SecurityContextLbl =\r\n            organization.replace(\"MSOL-\", \"\") +\r\n            \" ● \" +\r\n            couple.organization.title +\r\n            \" ● \" +\r\n            couple.role.nls;\r\n          securitycontextpreference.options.push({\r\n            value: SecurityContextStr,\r\n            label: SecurityContextLbl,\r\n          });\r\n        });\r\n      });\r\n    }\r\n    if (response.output.preferredcredentials) {\r\n      const preferredCredentials = response.output.preferredcredentials;\r\n      const defaultOption = `${preferredCredentials.role.name}.${preferredCredentials.organization.name}.${preferredCredentials.collabspace.name}`;\r\n      securitycontextpreference.defaultValue = defaultOption;\r\n    }\r\n    if (response.output.email) {\r\n      email = response.output.email;\r\n    }\r\n  }\r\n\r\n  return { securitycontextpreference: securitycontextpreference, email: email };\r\n};\r\n","export const refreshWidgetData = async (dataItems, handleDrop) => {\r\n  console.log(\"[refreshWidgetData] called with dataItems:\", dataItems);\r\n  if (!dataItems || dataItems.length === 0) {\r\n    console.warn(\"[Refresh] No dropped data available to refresh.\");\r\n    return;\r\n  }\r\n  try {\r\n    if (typeof handleDrop !== \"function\") {\r\n      throw new Error(\"[Refresh] handleDrop is not a function.\");\r\n    }\r\n    await handleDrop(dataItems);\r\n  } catch (error) {\r\n    console.error(\"[Refresh] Error during handleDrop execution:\", error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  droppedObjectData: {\r\n    initialDraggedData: [],\r\n    cardData: {}, // Dragged object details\r\n    versions: [], // Object versions (revisions)\r\n    parentDetails: [], // Parent metadata\r\n    ownerData: {} /* data from cardOwnerResult */,\r\n  },\r\n  plantObjectData: {\r\n    allPlants: [],\r\n    initialAssignedPlants: [],\r\n    uniquePlants: [],\r\n    productChildren: [],\r\n    CAName: false,\r\n    headers: {},\r\n    proposedChanges: [],\r\n  },\r\n  loadingParentDetails: false, // Loading state for parent metadata\r\n  isDropped: false, // Indicates whether an object has been dropped\r\n  selectedTableRows: [],\r\n};\r\n\r\nconst droppedObjectSlice = createSlice({\r\n  name: \"droppedObject\",\r\n  initialState,\r\n  reducers: {\r\n    setInitialDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData.initialDraggedData =\r\n        action.payload.initialDraggedData;\r\n    },\r\n    setDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData = {\r\n        ...state.droppedObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setPlantObjectData: (state, action) => {\r\n      state.plantObjectData = {\r\n        ...state.plantObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setProductChildren: (state, action) => {\r\n      state.plantObjectData.productChildren = action.payload;\r\n    },\r\n    setProposedChanges: (state, action) => {\r\n      state.plantObjectData.proposedChanges = action.payload;\r\n    },\r\n    setHeaders: (state, action) => {\r\n      state.plantObjectData.headers = action.payload;\r\n    },\r\n    setCAName: (state, action) => {\r\n      state.plantObjectData.CAName = action.payload;\r\n    },\r\n\r\n    setParentDetailsLoading: (state, action) => {\r\n      state.loadingParentDetails = action.payload;\r\n    },\r\n    setIsDropped: (state, action) => {\r\n      state.isDropped = action.payload;\r\n    },\r\n    setSelectedTableRows: (state, action) => {\r\n      state.selectedTableRows = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setInitialDroppedObjectData,\r\n  setDroppedObjectData,\r\n  setPlantObjectData,\r\n  setProductChildren,\r\n  setCAName,\r\n  setHeaders,\r\n  setParentDetailsLoading,\r\n  setIsDropped,\r\n  setSelectedTableRows,\r\n  setProposedChanges,\r\n} = droppedObjectSlice.actions;\r\nexport default droppedObjectSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport droppedObjectReducer from \"./droppedObjectSlice\";\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    droppedObject: droppedObjectReducer,\r\n  },\r\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n","// utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://emr-product-datahub-server-sap-stage.azurewebsites.net', // Your API base URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default api;","import * as XLSX from \"xlsx\"; // For Excel export\r\n\r\nexport const loadWAFData = async () => {\r\n  return await new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"DS/WAFData/WAFData\"],\r\n      (module) => {\r\n        resolve(module);\r\n      },\r\n      reject\r\n    );\r\n  });\r\n};\r\n\r\nexport const loadInterCom = async () => {\r\n  return await new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"UWA/Utils/InterCom\"],\r\n      (InterCom) => {\r\n        // console.log(\"InterCom module loaded:\", InterCom); // Log the loaded module\r\n        resolve(InterCom);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error loading InterCom module:\", error);\r\n        reject(error);\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nexport const loadPlatformAPI = () => {\r\n  return new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"DS/PlatformAPI/PlatformAPI\"],\r\n      (PlatformAPI) => {\r\n        if (PlatformAPI) {\r\n          resolve(PlatformAPI);\r\n        } else {\r\n          reject(new Error(\"Failed to load PlatformAPI\"));\r\n        }\r\n      },\r\n      reject\r\n    );\r\n  });\r\n};\r\n\r\nexport const callwebService = async (method, url, body) => {\r\n  let returnobj = {};\r\n  const WAFData = await loadWAFData();\r\n  let dataResp = WAFData.authenticatedRequest(url, {\r\n    method: method,\r\n    data: body,\r\n    type: \"json\",\r\n    async: false,\r\n    onComplete: function (dataResp) {\r\n      returnobj.status = true;\r\n      returnobj.output = dataResp;\r\n      console.log(\"kp--CallWebService--- >> \", dataResp);\r\n    },\r\n    onFailure: function (error, backendresponse, response_hdrs) {\r\n      console.log(\"Failedddddd\", error.message);\r\n      returnobj.status = false;\r\n      console.log(response_hdrs);\r\n      widget.body.innerHTML += \"<p>Something Went Wrong\" + error + \"</p>\";\r\n    },\r\n  });\r\n\r\n  return returnobj;\r\n};\r\nexport const makeDraggable = (element, data, onDragStart, onDragEnd) => {\r\n  window.require([\"DS/DataDragAndDrop/DataDragAndDrop\"], (DataDragAndDrop) => {\r\n    if (DataDragAndDrop) {\r\n      DataDragAndDrop.draggable(element, {\r\n        data: JSON.stringify(data),\r\n        start: function () {\r\n          if (onDragStart) onDragStart();\r\n        },\r\n        stop: function () {\r\n          console.log(\"Drag End\"); // Check if this is logged\r\n          if (onDragEnd) onDragEnd();\r\n        },\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nexport const excludeFields = [\"Dropped Revision ID\"];\r\n\r\nexport const handleExportExcel = (tableData, fileName = \"table-data.xlsx\") => {\r\n  const filteredData = tableData.map((row) => {\r\n    return Object.keys(row)\r\n      .filter((key) => !excludeFields.includes(key))\r\n      .reduce((obj, key) => {\r\n        obj[key] = row[key];\r\n        return obj;\r\n      }, {});\r\n  });\r\n\r\n  console.log(\"Filtered Data for Excel Export:\", filteredData);\r\n\r\n  const worksheet = XLSX.utils.json_to_sheet(filteredData);\r\n\r\n  const columnWidths = Object.keys(filteredData[0] || {}).map((key) => ({\r\n    wch:\r\n      Math.max(\r\n        key.length,\r\n        ...filteredData.map((row) =>\r\n          row[key] ? row[key].toString().length : 0\r\n        )\r\n      ) || 10, // Fallback to 10 if width calculation is invalid\r\n  }));\r\n  worksheet[\"!cols\"] = columnWidths;\r\n\r\n  // Apply text wrapping to all cells in the worksheet\r\n  const range = XLSX.utils.decode_range(worksheet[\"!ref\"]);\r\n  for (let rowNum = range.s.r; rowNum <= range.e.r; rowNum++) {\r\n    for (let colNum = range.s.c; colNum <= range.e.c; colNum++) {\r\n      const cell = worksheet[XLSX.utils.encode_cell({ r: rowNum, c: colNum })];\r\n      if (cell) {\r\n        cell.s = {\r\n          alignment: { wrapText: true },\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Table Data\");\r\n\r\n  // Generate and download the Excel file with the specified file name\r\n  XLSX.writeFile(workbook, fileName);\r\n};\r\n\r\n\r\n\r\n  /// Handle row selection and row range selection//\r\n  export const getRowRange = (rows, idA, idB) => {\r\n    const range = [];\r\n    let foundStart = false;\r\n    let foundEnd = false;\r\n    for (let index = 0; index < rows.length; index += 1) {\r\n      const row = rows[index];\r\n      if (row.id === idA || row.id === idB) {\r\n        if (foundStart) {\r\n          foundEnd = true;\r\n        }\r\n        if (!foundStart) {\r\n          foundStart = true;\r\n        }\r\n      }\r\n      if (foundStart) {\r\n        range.push(row);\r\n      }\r\n      if (foundEnd) {\r\n        break;\r\n      }\r\n    }\r\n    if (!foundEnd) {\r\n      throw new Error(\"Could not find whole row range\");\r\n    }\r\n    return range;\r\n  };","// constants/toastMessages.js\r\nexport const MSG_FETCH_CSRF_HEADERS_FAILED =\r\n  \"Failed to fetch CSRF headers. Please try again.\";\r\nexport const MSG_FETCH_OBJECT_DETAILS_FAILED =\r\n  \"Failed to fetch object details.\";\r\nexport const MSG_FETCH_OBJECT_DETAILS_SUCCESS =\r\n  \"Object details fetched successfully!\";\r\n// export const MSG_WIDGET_RESET_SUCCESS = \"Widget has been reset.\";\r\n// export const MSG_TABLE_DATA_FETCHED_SUCCESS =\r\n//   \"Table data fetched successfully!\";\r\nexport const MSG_UNEXPECTED_ERROR =\r\n  \"An unexpected error occurred. Please try again.\";\r\nexport const MSG_REFRESH_SUCCESS = \"Widget data refreshed successfully!\";\r\nexport const MSG_REFRESH_ERROR = \"An error occurred during refresh.\";\r\nexport const MSG_EMPTYADD_ERROR = \"Please select any one Plant\";\r\nexport const MSG_ADDPRODUCT_RELEASED_ERROR =\r\n  \"Change Action is required to assign plants to Product, please assign Modify change Action and try again\";\r\nexport const MSG_ADDPRODUCT_NOT_ALLOWED_ERROR =\r\n  \"Change Action is required to assign plants to Product, please assign change Action and try again\";\r\nexport const MSG_SAVEPRODUCT_RELEASED_ERROR =\r\n  \"Change Action is required to update plants, please assign Modify change Action and try again\";\r\nexport const MSG_SAVEPRODUCT_NOT_ALLOWED_ERROR =\r\n  \"Change Action is required to update, please assign change Action and try again\";\r\nexport const MSG_SAVE_SUCCESS = \"Data Saved Successfully\";\r\nexport const MSG_REPLACE_SUCCESS =\r\n  \"Replacement successful, Please wait for the data to index\";\r\nexport const MSG_REPLACE_ERROR = \"An error occurred during replacement\";\r\nexport const MSG_NO_ROWS = \"No rows selected.\";\r\n// export const MSG_NO_REPLACE = \"No rows with 'To-Be child connected' selected.\";\r\nexport const MSG_NO_REPLACE =\r\n  \"Latest Revision already connected to selected parents\";\r\n\r\n// Validate object type [VPMReference, Document, Raw_Material]//\r\nexport const MSG_INVALID_OBJECT_TYPE =\r\n  \"Please select a Physical Product, Document or Raw Material\";\r\nexport const MSG_MULTIPLE_OBJECTS_DROPPED =\r\n  \"Multiple objects dropped. Please drop only one object.\";\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","data","isColumn","onDragStart","onDragEnd","titleRef","useRef","initialDraggedData","useSelector","state","droppedObject","droppedObjectData","useEffect","current","makeDraggable","concat","ref","border","owner","paddingLeft","_Fragment","EIN","Description","setIsColumn","useState","Card","Img","imageURL","CardBody","List","toggleFlexDirection","Image","DragAndDropStandAlone","initializeDroppableArea","useDroppableArea","hasInitializedDroppable","checkAndInitialize","document","querySelector","console","log","warn","setTimeout","isDragging","setIsDragging","CardComponent","handleDragStart","handleDragEnd","onSearch","searchText","setSearchText","inputRef","FontAwesomeIcon","icon","faMagnifyingGlass","handleSearchIconClick","trim","InputGroup","Form","Control","value","onChange","event","newSearchText","target","onKeyDown","key","placeholder","handleClearClick","focus","useInterComSearch","socket","setSocket","InterCom","setInterCom","async","interComInstance","loadInterCom","error","loadData","disconnect","performSearch","useCallback","searchOpts","onObjectsSelected","_window$widget","socketName","Date","toISOString","replace","newSocket","Socket","dispatchRetryInternal","subscribeServer","widgetId","window","widget","id","finalSearchOpts","widget_id","app_socket_id","default_search_criteria","dispatchEvent","addListener","DragAndDropComponent","handleDrop","SearchInput","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","length","objectId","objectType","Loader","header","columns","table","isFixed","column","isPinned","getState","columnPinning","left","includes","sortable","useSortable","attributes","listeners","setNodeRef","transform","opacity","position","top","CSS","Transform","toString","transition","getSize","zIndex","cursor","backgroundColor","getToggleSortingHandler","isPlaceholder","flexRender","columnDef","getContext","getIsSorted","onDoubleClick","resetSize","onMouseDown","getResizeHandler","onTouchStart","getIsResizing","cell","getIsPinned","cellContent","getValue","editable","meta","widgetType","dispatch","useDispatch","tableData","setTableData","rowSelection","setRowSelection","lastSelectedId","setLastSelectedId","tableRef","isScrolled","setIsScrolled","handleScroll","e","scrollTop","tableContainer","addEventListener","removeEventListener","columnOrder","setColumnOrder","storedOrder","localStorage","getItem","JSON","parse","initialOrder","otherColumns","map","col","accessorKey","push","setItem","stringify","defaultColumnOrder","useMemo","initialColumnPinning","pinnedColumns","forEach","enhancedColumns","selectionColumn","_ref2","el","indeterminate","getIsSomeRowsSelected","checked","getIsAllRowsSelected","getToggleAllRowsSelectedHandler","_ref3","row","getIsSelected","getToggleSelectedHandler","_ref4","handleEditCell","rowIndex","columnId","updatedData","index","updateTableData","sensors","useSensors","useSensor","MouseSensor","activationConstraint","distance","TouchSensor","delay","tolerance","KeyboardSensor","useReactTable","onRowSelectionChange","onColumnOrderChange","getCoreRowModel","getSortedRowModel","enableRowSelection","defaultColumn","minSize","maxSize","columnResizeMode","selectedRows","getSelectedRowModel","flatRows","original","setSelectedTableRows","columnSizeVars","headers","getFlatHeaders","colSizes","i","columnSizingInfo","columnSizing","CustomButton","handleSelectAll","handleDeselectAll","handleExport","handleExportExcel","handleResetColumns","removeItem","DndContext","collisionDetection","closestCenter","modifiers","restrictToHorizontalAxis","active","over","prevOrder","oldIndex","indexOf","newIndex","arrayMove","getTotalSize","getHeaderGroups","headerGroup","SortableContext","items","getVisibleLeafColumns","strategy","horizontalListSortingStrategy","DraggableColumnHeader","getRowModel","rows","handleRowClick","rowsById","shiftKey","rowsToToggle","getRowRange","isLastSelected","r","toggleSelected","getVisibleCells","DraggableCell","showErrorToast","useToast","fetchRevisionsAndParents","useRevisions","loading","setLoading","fetchObjectDetails","objectDetailsResult","getDroppedObjectDetails","dataItems","success","_dataItems$","_dataItems$2","relativePath","cardData","revisionParentData","Promise","all","setDroppedObjectData","parentDetails","MSG_FETCH_OBJECT_DETAILS_FAILED","_dataItems$3","MSG_INVALID_OBJECT_TYPE","setIsDroppedAction","MSG_UNEXPECTED_ERROR","attempts","checkAndInit","droppableContainers","querySelectorAll","container","initDroppable","showSuccessToast","response","api","post","status","Error","replaceRevisions","selectedParents","droppedData","userEmail","SelectedParents","DroppedData","MSG_REPLACE_SUCCESS","MSG_REPLACE_ERROR","message","showToast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","Bounce","otherOptions","toast","options","arguments","undefined","showInfoToast","showWarningToast","containers","NodeList","prototype","isPrototypeOf","Array","isArray","require","DataDragAndDrop","droppable","drop","parsedData","MSG_MULTIPLE_OBJECTS_DROPPED","classList","remove","currentState","store","setInitialDroppedObjectData","enter","add","out","leave","objectDetailsURL","get","SecurityContext","email","securitycontextpreference","name","label","defaultValue","callwebService","output","collabspaces","collabspace","organization","couples","couple","SecurityContextStr","SecurityContextLbl","nls","preferredcredentials","preferredCredentials","defaultOption","refreshWidgetData","droppedObjectSlice","createSlice","initialState","versions","ownerData","plantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","CAName","proposedChanges","loadingParentDetails","isDropped","selectedTableRows","reducers","action","payload","setPlantObjectData","setProductChildren","setProposedChanges","setHeaders","setCAName","setParentDetailsLoading","setIsDropped","actions","configureStore","reducer","droppedObjectReducer","axios","create","baseURL","loadWAFData","resolve","reject","module","loadPlatformAPI","PlatformAPI","method","url","body","returnobj","authenticatedRequest","onComplete","dataResp","onFailure","backendresponse","response_hdrs","innerHTML","element","start","stop","excludeFields","fileName","filteredData","Object","keys","filter","reduce","obj","worksheet","XLSX","json_to_sheet","columnWidths","wch","Math","max","range","decode_range","rowNum","s","colNum","c","encode_cell","alignment","wrapText","workbook","book_new","book_append_sheet","idA","idB","foundStart","foundEnd","MSG_FETCH_CSRF_HEADERS_FAILED","MSG_REFRESH_SUCCESS","MSG_REFRESH_ERROR","MSG_EMPTYADD_ERROR","MSG_ADDPRODUCT_RELEASED_ERROR","MSG_ADDPRODUCT_NOT_ALLOWED_ERROR","MSG_SAVEPRODUCT_RELEASED_ERROR","MSG_SAVEPRODUCT_NOT_ALLOWED_ERROR","MSG_SAVE_SUCCESS","MSG_NO_ROWS","MSG_NO_REPLACE"],"sourceRoot":""}
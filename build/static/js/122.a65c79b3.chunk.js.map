{"version":3,"file":"static/js/122.a65c79b3.chunk.js","mappings":"0UA0BA,IAAIA,EAAO,KA4CI,SAAS,IAGtB,GAFAC,QAAQC,IAAI,8DAERC,OAAOC,OAAQ,CACjBH,QAAQC,IAAI,kEAEZ,IAAIG,GAAe,EAEnBF,OAAOC,OAAOE,SAAS,UAAU,KAC3BD,EACFJ,QAAQM,KAAK,+EAGfF,GAAe,EAEfJ,QAAQC,IAAI,wEA1DlB,WAAkB,IAADM,EAAAC,EACfC,UAAU,CAAC,+BAAgCC,IACzCR,OAAOQ,YAAcA,CAAW,IAElCV,QAAQC,IAAI,kDAEZ,IAAIU,GACW,QAAbJ,EAAAL,OAAOC,cAAM,IAAAI,GAAM,QAANC,EAAbD,EAAeK,YAAI,IAAAJ,OAAN,EAAbA,EAAqBK,cAAc,WACnCC,SAASC,eAAe,QAGrBJ,EAWHX,QAAQC,IAAI,mCAVZU,EAAcG,SAASE,cAAc,OACrCL,EAAYM,GAAK,OACbf,OAAOC,QAAUD,OAAOC,OAAOS,MACjCV,OAAOC,OAAOS,KAAKM,YAAYP,GAC/BX,QAAQC,IAAI,sDAEZa,SAASF,KAAKM,YAAYP,GAC1BX,QAAQC,IAAI,wDAMXF,EAIHC,QAAQC,IAAI,4CAHZD,QAAQC,IAAI,uCACZF,EAAOoB,EAAAA,WAAoBR,IAK7BZ,EAAKqB,QAMFC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,sBAAoBtB,QAAQC,IAAI,kBAExCD,QAAQC,IAAI,iCACd,CAkBMsB,GAAO,GAEX,MACEvB,QAAQwB,MAAM,sEAclB,C","sources":["index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport RevisionFloat from \"./pages/revisionFloat/revisionFloat\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\n\r\n// Connect to the WebSocket server\r\n// const socket = io(\"http://localhost:9090\");\r\n\r\n// socket.on(\"connect\", () => {\r\n//   console.log(\"Connected to Dev Server ✅\");\r\n// });\r\n\r\n// socket.on(\"filech\", () => {\r\n//   console.log(\"File Changed. Reloading...\");\r\n//   window.location.reload();\r\n// });\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    // <Provider store={store}>\r\n    //   <RevisionFloat />\r\n    //   <ToastContainer />\r\n    // </Provider>\r\n\r\n     <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n  \r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n  \r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\");\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n  \r\n      console.log(\"[index.js] ✅ First-time onLoad event fired. Initializing app...\");\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\"[index.js] ❌ Widget not detected! onLoad cannot be registered.\");\r\n  }\r\n  // When the widget fires the onRefresh event, reload the page.\r\n  // window.widget.addEvent(\"onRefresh\", () => {\r\n  //   console.log(\"[index.js] onRefresh event fired. Reloading page.\");\r\n  //   // window.location.reload();\r\n\r\n    \r\n  // });\r\n\r\n  // Log a message when the widget's preferences have been edited.\r\n  // window.widget.addEvent(\"endEdit\", () => {\r\n  //   console.log(\"Preferences have been edited\");\r\n  // });\r\n}\r\n"],"names":["root","console","log","window","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","_jsxs","children","start","error"],"sourceRoot":""}
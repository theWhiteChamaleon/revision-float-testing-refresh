{"version":3,"file":"static/js/909.20465590.chunk.js","mappings":"+UAMA,MAAMA,EAAgBA,KACpBC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAASC,UAAU,eAGtCC,EAAgBA,KACpBL,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,KAAMI,EAAAA,IAASF,UAAU,eAuD/BG,EAAe,CAC1B,CACEC,YAAa,MACbC,OAAQ,MACRC,eAAe,GAEjB,CAAEF,YAAa,QAASC,OAAQ,SAChC,CAAED,YAAa,cAAeC,OAAQ,eACtC,CAAED,YAAa,OAAQC,OAAQ,QAC/B,CAAED,YAAa,WAAYC,OAAQ,YACnC,CACED,YAAa,2BACbC,OAAQ,sBAEV,CACED,YAAa,yBACbC,OAAQ,4BACRE,KAAMC,IAAe,IAAd,KAAED,GAAMC,EAGb,OAFcD,EAAKE,YAEJb,EAAAA,EAAAA,KAACD,EAAa,KAAMC,EAAAA,EAAAA,KAACK,EAAa,GAAG,GAGxD,CACEG,YAAa,wBACbC,OAAQ,4BAEV,CACED,YAAa,eACbC,OAAQ,gBAEV,CAAED,YAAa,QAASC,OAAQ,SAChC,CAAED,YAAa,QAASC,OAAQ,SAChC,CAAED,YAAa,aAAcC,OAAQ,cACrC,CAAED,YAAa,cAAeC,OAAQ,gB,kEC7FxC,MA0DA,EA1DwBK,KACtB,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,MACjB,iBAAEC,EAAgB,eAAEC,IAAmBC,EAAAA,EAAAA,KACvCC,GAAkBC,EAAAA,EAAAA,SAAO,GAE/BC,QAAQC,IAAI,kCAkDZ,OA1CAC,EAAAA,EAAAA,YAAU,KACR,IAAKC,OAAOC,OAAQ,OAEpBJ,QAAQC,IAAI,mEAmCZE,OAAOC,OAAOC,SAAS,aAjCLC,UAAa,IAADC,EAAAC,EAG5B,GAd4BC,IACvBA,EAAMC,MAAMC,GACjBA,EAAKC,SAAS,uBAAyBD,EAAKC,SAAS,mBAYjDC,EAFU,IAAIC,OAAQC,MAAMC,MAAM,OAIpC,YADAhB,QAAQiB,KAAK,kFAIf,GAAInB,EAAgBoB,QAElB,YADAlB,QAAQiB,KAAK,0FAGfnB,EAAgBoB,SAAU,EAE1BlB,QAAQC,IAAI,yDACZ,MACMkB,EADcC,EAAAA,EAAMC,WACYC,cAAcC,kBAAkBC,mBAEtE,GAAsB,OAAjBL,QAAiB,IAAjBA,GAAuB,QAANZ,EAAjBY,EAAmBM,YAAI,IAAAlB,GAAO,QAAPC,EAAvBD,EAAyBmB,aAAK,IAAAlB,GAA9BA,EAAgCmB,OAKrC,IACE3B,QAAQC,IAAI,8EACN2B,EAAAA,EAAAA,GAAkBT,EAAkBM,KAAKC,MAAOjC,GACtDE,EAAiBkC,EAAAA,GACnB,CAAE,MAAOC,GACP9B,QAAQ8B,MAAM,iDAA6CA,GAC3DlC,EAAemC,EAAAA,GACjB,MAXE/B,QAAQ8B,MAAM,6EAAoEX,EAWpF,IAIFnB,QAAQC,IAAI,qEAAgE,GAC3E,IAEI,IAAI,EC2Cb,EA/FsC+B,KACpC,MAAM,iBAAEC,IAAqBC,EAAAA,EAAAA,MACvB,eAAEtC,IAAmBC,EAAAA,EAAAA,KAErB0B,GAAoBY,EAAAA,EAAAA,KACvBC,GAAUA,EAAMd,cAAcC,oBAG3Bc,GAAoBF,EAAAA,EAAAA,KACvBC,GAAUA,EAAMd,cAAce,oBA+DjC,OACE3D,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sBAAqBwD,UAClC5D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,CACXC,QAAQ,oBACR1D,UAAU,MACV2D,KAAK,KACLC,KAAK,UACLC,QAjEgBrC,UAAa,IAADsC,EAChC,IAAKP,GAAkD,IAA7BA,EAAkBV,OAE1C,YADA/B,EAAeiD,EAAAA,IAKjB,MAAMC,EAA4C,QAAlCF,EAAGrB,EAAkBwB,qBAAa,IAAAH,OAAA,EAA/BA,EAAiCnB,KACpD,IAAKqB,GAAoC,IAAtBA,EAAWnB,OAE5B,YADA/B,EAAe,gCAKjB,MAAMoD,EAAeX,EAAkBY,QACpCC,GAAyC,MAAjCA,EAAI,2BAGf,GAA4B,IAAxBF,EAAarB,OAEf,YADA/B,EAAeuD,EAAAA,IAKjB,MAAMC,EAAkBJ,EAAaK,KAAKH,GACjCJ,EAAWQ,MACfC,GAAWA,EAAO,yBAA2BL,EAAI,2BAKtD,GAAIE,EAAgB1C,MAAM6C,IAAYA,IAEpC,YADA3D,EAAe,oDAIjB,MAAM4D,QCzDKlD,iBACb,IACE,MAAMmD,QAAoBC,EAAAA,EAAAA,MAG1B,aAFmBD,EAAYE,WAEnBC,KACd,CAAE,MAAO9B,GAEP,OADA9B,QAAQ8B,MAAM,4BAA6BA,GACpC,IACT,CACF,CD+C4B+B,GACxB,IAAKL,EACH,MAAM,IAAI1C,MAAM,yBAGlB,MAAMgD,EAAcvC,EAAkBwC,gBAGjB9B,EACnBmB,EACAU,EACAN,IAISQ,OAGT,KAuBI,EEsEV,EAtJsBC,KACpB,MAAM,wBAAEC,EAAuB,QAAEC,IAAYzE,EAAAA,EAAAA,KACvC0E,GAAWrE,EAAAA,EAAAA,QAAO,GAClBsE,GAAWC,EAAAA,EAAAA,MAEjBtE,QAAQC,IAAI,mDAEZ,MAAM,SAAE8D,EAAQ,cAAEhB,EAAa,UAAEwB,EAAS,mBAAE/C,IAC1CW,EAAAA,EAAAA,KACGC,IAAK,CACJ2B,SAAU3B,EAAMd,cAAcC,kBAAkBwC,SAChDhB,cAAeX,EAAMd,cAAcC,kBAAkBwB,cACrDwB,UAAWnC,EAAMd,cAAciD,UAC/B/C,mBACEY,EAAMd,cAAcC,kBAAkBC,sBAE1CgD,EAAAA,IAEJxE,QAAQC,IAAI,uDAA8C8D,GAC1D/D,QAAQC,IAAI,4DAAmD8C,GAG/D,MAAM0B,GAA0B1E,EAAAA,EAAAA,SAAO,IACvCG,EAAAA,EAAAA,YAAU,KACHqE,GAAcE,EAAwBvD,UACzClB,QAAQC,IAAI,+DACZiE,IACAO,EAAwBvD,SAAU,EACpC,GACC,CAACqD,EAAWL,IAGf,MAAMQ,GAAqBC,EAAAA,EAAAA,UACzB,IJfwBC,EAAC7B,EAAegB,IACrChB,GAAkB8B,MAAMC,QAAQ/B,EAActB,MAI5CsB,EAActB,KAAK4B,KAAKE,IAAMwB,EAAAA,EAAAA,GAAA,CACnCC,IAAKzB,EAAOyB,KAAO,MACnBC,MAAO1B,EAAO0B,OAAS,MACvBC,YAAa3B,EAAO2B,aAAe,MACnCC,KAAM5B,EAAO4B,MAAQ,MACrBC,SAAU7B,EAAO,qBAAuB,MACxC,sBAAuBA,EAAO,wBAA0B,MACxD,2BAA4BA,EAAO8B,mBAAqB,MACxD,0BAA0B9B,EAAO+B,sBACjC,wBAAyB/B,EAAO+B,uBAAyB,IACzDC,MAAOhC,EAAO,mBAAqB,MACnCiC,MAAOjC,EAAOiC,OAAS,MACvB,aAAcjC,EAAO,eAAiB,MACtCkC,YAAalC,EAAO,8BAAgC,OAG7B,cAAX,OAARQ,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,OAAuB,CACnCO,aAAcnC,EAAOmC,cAAgB,WApBvC1F,QAAQiB,KAAK,mFACN,IIYD2D,CAAa7B,EAAegB,IAClC,CAAChB,EAAegB,KAIlB7D,EAAAA,EAAAA,YAAU,KACJwE,EAAmB/C,OAAS,GAC9B3B,QAAQC,IACN,2DACAyE,EAEJ,GACC,CAACA,IAGJ,MAAMiB,GAAoBhB,EAAAA,EAAAA,UAAQ,IJvDRZ,IACrBA,GAAgC,kBAAbA,GAIxBgB,EAAAA,EAAAA,GAAA,CACEa,MAAO7B,EAASkB,OAAS,MACzBY,KAAM9B,EAASoB,MAAQ,MACvB,iBAAkBpB,EAAS,mBAAqB,MAChD+B,MAAO/B,EAASyB,OAAS,MACzB,4BAA6BzB,EAAS,8BAAgC,MACtEmB,YAAanB,EAASmB,aAAe,MACrC,mBAAoBnB,EAAS,qBAAuB,MACpD,2BAA4BA,EAAS,6BAA+B,MACpE,aAAcA,EAAS,eAAiB,MACxCgC,SACEhC,EAASgC,UACT,uHACoB,aAAlBhC,EAASoB,MAAuB,CAClCH,IAAKjB,EAASiB,KAAO,MACrB,aAAcjB,EAAS,eAAiB,QAlBnC,KIqD+BiC,CAAYjC,IAAW,CAACA,IAG1DkC,GAAkBC,EAAAA,EAAAA,cAAY,KAClClG,QAAQC,IACN,iFAGGsE,GAQA/C,EAAmBG,SACtB3B,QAAQC,IAAI,mEACZiE,KAIFG,GAAS8B,EAAAA,EAAAA,KAAa,IAElBpC,GAAYhB,EAAcpB,QAAUH,EAAmBG,QACzD3B,QAAQC,IAAI,8DACZoE,GACE+B,EAAAA,EAAAA,IAAqB,CACnBrC,SAAU,CAAC,EACXhB,cAAe,GACfvB,mBAAoB,OAIxBxB,QAAQC,IACN,4EAIJD,QAAQC,IAAI,6CA9BVD,QAAQC,IACN,8EA6B8C,GACjD,CACDoE,EACAH,EACAK,EACA/C,EACAuC,EACAhB,IAIIsD,GAAkB1B,EAAAA,EAAAA,UAAQ,IACP,cAAX,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,MACLlG,EAEAA,EAAagE,QACjBqD,GAAkC,iBAAvBA,EAAOpH,eAGtB,CAAC6E,IAGJ,OAFA/D,QAAQC,IAAI,6CAGVsG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlE,SAAA,EACIiC,IAAcJ,IAAWzF,EAAAA,EAAAA,KAAC+H,EAAAA,EAAoB,IAC/CtC,IAAWzF,EAAAA,EAAAA,KAACgI,EAAAA,EAAM,IAClBnC,IACCgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlE,SAAA,EACE5D,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qCAAoCwD,UACjDiE,EAAAA,EAAAA,MAAA,OAAKzH,UAAU,SAAQwD,SAAA,EACrB5D,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUwD,UACvB5D,EAAAA,EAAAA,KAACiI,EAAAA,EAAK,CACJC,IAAI,+DACJC,IAAI,YACJ/H,UAAU,YACV6D,QAASsD,MAGZN,IACCjH,EAAAA,EAAAA,KAACoI,EAAAA,EAAmB,CAACrF,KAAMkE,SAKhCjB,EAAmB/C,OAAS,GAC3B4E,EAAAA,EAAAA,MAAA,OAAKzH,UAAU,cAAawD,SAAA,EAC1B5D,EAAAA,EAAAA,KAACsD,EAA6B,KAC9BtD,EAAAA,EAAAA,KAACqI,EAAAA,EAAa,CAEZtF,KAAMiD,EACNsC,QAASX,EACTY,WAAW,yBAHN7C,EAASlD,aAOlBxC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBwD,SAAC,mCAIrC,E,wBC5IP,IAAI4E,EAAO,KA8CI,SAAS,IAGtB,GAFAlH,QAAQC,IAAI,8DAERE,OAAOC,OAAQ,CACjBJ,QAAQC,IAAI,kEAEZ,IAAIkH,GAAe,EAEnBhH,OAAOC,OAAOC,SAAS,UAAU,KAC3B8G,EACFnH,QAAQiB,KACN,+EAIJkG,GAAe,EAEfnH,QAAQC,IACN,wEA/DR,WAAkB,IAADmH,EAAAC,EACfC,UAAU,CAAC,+BAAgC7D,IACzCtD,OAAOsD,YAAcA,CAAW,IAElCzD,QAAQC,IAAI,kDAEZ,IAAIsH,GACW,QAAbH,EAAAjH,OAAOC,cAAM,IAAAgH,GAAM,QAANC,EAAbD,EAAeI,YAAI,IAAAH,OAAN,EAAbA,EAAqBI,cAAc,WACnCC,SAASC,eAAe,QAGrBJ,EAWHvH,QAAQC,IAAI,mCAVZsH,EAAcG,SAASE,cAAc,OACrCL,EAAYM,GAAK,OACb1H,OAAOC,QAAUD,OAAOC,OAAOoH,MACjCrH,OAAOC,OAAOoH,KAAKM,YAAYP,GAC/BvH,QAAQC,IAAI,sDAEZyH,SAASF,KAAKM,YAAYP,GAC1BvH,QAAQC,IAAI,wDAMXiH,EAIHlH,QAAQC,IAAI,4CAHZD,QAAQC,IAAI,uCACZiH,EAAOa,EAAAA,WAAoBR,IAK7BL,EAAKc,QACHzB,EAAAA,EAAAA,MAAC0B,EAAAA,GAAQ,CAAC7G,MAAOA,EAAAA,EAAMkB,SAAA,EACrB5D,EAAAA,EAAAA,KAACc,EAAe,KACdd,EAAAA,EAAAA,KAACuF,EAAa,KAEhBvF,EAAAA,EAAAA,KAACwJ,EAAAA,GAAc,QAKnBlI,QAAQC,IAAI,iCACd,CAsBMkI,GAAO,GAEX,MACEnI,QAAQ8B,MACN,sEAcN,C","sources":["pages/revisionFloat/dataHelpers.js","WidgetLifecycle-munish.jsx","pages/revisionFloat/revisionFloatToolbarNativeCta.jsx","utils/getUserEmail.js","pages/revisionFloat/revisionFloat.jsx","index.js"],"sourcesContent":["// pages/revisionFloat/dataHelpers.js\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CheckmarkCell = () => (\r\n  <FontAwesomeIcon icon={faCheck} className=\"green-icon\" />\r\n);\r\n\r\nconst CrossmarkCell = () => (\r\n  <FontAwesomeIcon icon={faXmark} className=\"cross-icon\" />\r\n);\r\n\r\nexport const getCardData = (cardData) => {\r\n  if (!cardData || typeof cardData !== \"object\") {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    title: cardData.Title || \"N/A\",\r\n    type: cardData.Type || \"N/A\",\r\n    \"Maturity State\": cardData[\"Maturity State\"] || \"N/A\",\r\n    owner: cardData.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": cardData[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: cardData.Description || \"N/A\",\r\n    \"Dropped Revision\": cardData[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": cardData[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": cardData[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      cardData.imageURL ||\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\", // You might want a placeholder image URL\r\n    ...(cardData.Type !== \"Document\" && {\r\n      EIN: cardData.EIN || \"N/A\",\r\n      \"CAD Format\": cardData[\"CAD Format\"] || \"N/A\",\r\n    }),\r\n  };\r\n};\r\n\r\nexport const getTableData = (parentDetails, cardData) => {\r\n  if (!parentDetails || !Array.isArray(parentDetails.data)) {\r\n    console.warn(\"[getTableData] ⚠️ No parent details available. Returning empty array.\");\r\n    return [];\r\n  }\r\n  return parentDetails.data.map((parent) => ({\r\n    EIN: parent.EIN || \"N/A\",\r\n    Title: parent.Title || \"N/A\",\r\n    Description: parent.Description || \"N/A\",\r\n    Type: parent.Type || \"N/A\",\r\n    Revision: parent[\"Dropped Revision\"] || \"N/A\",\r\n    \"Dropped Revision ID\": parent[\"Dropped Revision ID\"] || \"N/A\",\r\n    \"Connected Child Revision\": parent.connectedChildRev || \"N/A\",\r\n    \"Latest child connected\": parent.toBeChildRevConnected ? false : true,\r\n    \"To-Be child connected\": parent.toBeChildRevConnected || \"-\",\r\n    State: parent[\"Maturity State\"] || \"N/A\",\r\n    Owner: parent.Owner || \"N/A\",\r\n    \"CAD Format\": parent[\"CAD Format\"] || \"N/A\",\r\n    Collabspace: parent[\"Collaborative Space Title\"] || \"N/A\",\r\n\r\n    // Add relationship field if the type is Document\r\n    ...(cardData?.Type === \"Document\" && {\r\n      relationship: parent.relationship || \"N/A\",\r\n    }),\r\n  }));\r\n};\r\n\r\nexport const tableColumns = [\r\n  {\r\n    accessorKey: \"EIN\",\r\n    header: \"EIN\",\r\n    columnPinning: true,\r\n  },\r\n  { accessorKey: \"Title\", header: \"Title\" },\r\n  { accessorKey: \"Description\", header: \"Description\" },\r\n  { accessorKey: \"Type\", header: \"Type\" },\r\n  { accessorKey: \"Revision\", header: \"Revision\" },\r\n  {\r\n    accessorKey: \"Connected Child Revision\",\r\n    header: \"Connected Revision\",\r\n  },\r\n  {\r\n    accessorKey: \"Latest child connected\",\r\n    header: \"latest Revision Connected\",\r\n    cell: ({ cell }) => {\r\n      const value = cell.getValue();\r\n      // Render a checkmark if true, a cross if false\r\n      return value ? <CheckmarkCell /> : <CrossmarkCell />;\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"To-Be child connected\",\r\n    header: \"Revision to-be Connected\",\r\n  },\r\n  {\r\n    accessorKey: \"relationship\",\r\n    header: \"Relationship\",\r\n  },\r\n  { accessorKey: \"State\", header: \"State\" },\r\n  { accessorKey: \"Owner\", header: \"Owner\" },\r\n  { accessorKey: \"CAD Format\", header: \"CAD Format\" },\r\n  { accessorKey: \"Collabspace\", header: \"Collabspace\" },\r\n];\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ✅ Import Redux store directly\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const hasOnRefreshRun = useRef(false); // ✅ Prevent duplicate onRefresh execution\r\n\r\n  console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some((line) =>\r\n      line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n    \r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n      \r\n      if (isAutoTriggeredRefresh(trace)) {\r\n        console.warn(\"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\");\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      if (hasOnRefreshRun.current) {\r\n        console.warn(\"[WidgetLifecycle] ⏳ `onRefresh` was already executed. Ignoring duplicate trigger.\");\r\n        return;\r\n      }\r\n      hasOnRefreshRun.current = true; // ✅ Mark as executed\r\n\r\n      console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      const latestState = store.getState();\r\n      const latestDraggedData = latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\", latestDraggedData);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log(\"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\");\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      }\r\n    };\r\n\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    console.log(\"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\");\r\n  }, []); // ✅ Runs only once\r\n\r\n  return null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React from \"react\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useRevisions from \"../../hooks/useRevisions\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_NO_ROWS, MSG_NO_REPLACE } from \"../../utils/toastMessages\";\r\nimport getUserEmail from \"../../utils/getUserEmail\";\r\nimport WidgetLifecycle from \"../../WidgetLifecycle-munish\";\r\n\r\n\r\nconst RevisionFloatToolbarNativeCta = () => {\r\n  const { replaceRevisions } = useRevisions();\r\n  const { showErrorToast } = useToast();\r\n  // Access relevant data from Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n\r\n  const selectedTableRows = useSelector(\r\n    (state) => state.droppedObject.selectedTableRows\r\n  ); // Assuming you're storing selected rows in Redux\r\n\r\n  // console.log(\"selectedTableRows\", selectedTableRows);\r\n\r\n  const handleReplace = async () => {\r\n    if (!selectedTableRows || selectedTableRows.length === 0) {\r\n      showErrorToast(MSG_NO_ROWS);\r\n      return;\r\n    }\r\n\r\n    // Get the parentDetails from droppedObjectData\r\n    const allParents = droppedObjectData.parentDetails?.data;\r\n    if (!allParents || allParents.length === 0) {\r\n      showErrorToast(\"No parent details available.\");\r\n      return;\r\n    }\r\n\r\n    // Filter selected rows where 'To-Be child connected' is not \"-\"\r\n    const selectedRows = selectedTableRows.filter(\r\n      (row) => row[\"To-Be child connected\"] !== \"-\"\r\n    );\r\n\r\n    if (selectedRows.length === 0) {\r\n      showErrorToast(MSG_NO_REPLACE);\r\n      return;\r\n    }\r\n\r\n    // Map selectedRows to their corresponding parent objects\r\n    const selectedParents = selectedRows.map((row) => {\r\n      return allParents.find(\r\n        (parent) => parent[\"Dropped Revision ID\"] === row[\"Dropped Revision ID\"]\r\n      );\r\n    });\r\n\r\n    // Check if any matching parent is not found\r\n    if (selectedParents.some((parent) => !parent)) {\r\n      showErrorToast(\"Could not find all corresponding parent details.\");\r\n      return;\r\n    }\r\n\r\n    const userEmail = await getUserEmail();\r\n    if (!userEmail) {\r\n      throw new Error(\"User email not found.\");\r\n    }\r\n\r\n    const droppedData = droppedObjectData.cardData;\r\n\r\n    // Call the replaceRevisions function from useRevisions hook\r\n    const result = await replaceRevisions(\r\n      selectedParents,\r\n      droppedData,\r\n      userEmail\r\n    );\r\n    \r\n\r\n    if (result.success) {\r\n      // Handle success (e.g., show a success message, refetch data, etc.)\r\n    } else {\r\n      // Handle error (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex cta-absolute\">\r\n      <CustomButton\r\n        variant=\"outline-secondary\"\r\n        className=\"m-2\"\r\n        size=\"lg\"\r\n        text=\"Replace\"\r\n        onClick={handleReplace}\r\n      />\r\n      {/* <WidgetLifecycle /> */}\r\n      \r\n\r\n      {/* <CustomButton\r\n        variant=\"outline-secondary\"\r\n        className=\"m-2\"\r\n        size=\"lg\"\r\n        text=\" Select items in my Collaborative Space\"\r\n        // onClick={\"\"}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevisionFloatToolbarNativeCta;\r\n","// utils/getUserEmail.js\r\nimport { loadPlatformAPI } from \"./helpers\"; \r\n\r\nexport default async function getUserEmail() {\r\n  try {\r\n    const PlatformAPI = await loadPlatformAPI();\r\n    const user = await PlatformAPI.getUser();\r\n\r\n    return user.email;\r\n  } catch (error) {\r\n    console.error(\"Error getting user email:\", error);\r\n    return null; // Or throw the error, depending on how you want to handle it\r\n  }\r\n}","import React, {\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\nimport DragAndDropComponent from \"../../components/DragAndDrop/DragAndDrop\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ReusableTable from \"../../components/Table/Table\";\r\nimport {\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport { getCardData, getTableData, tableColumns } from \"./dataHelpers\";\r\nimport RevisionFloatToolbarNativeCta from \"./revisionFloatToolbarNativeCta\";\r\n\r\nconst RevisionFloat = () => {\r\n  const { initializeDroppableArea, loading } = useDroppableArea();\r\n  const tableKey = useRef(0); // ✅ Use useRef instead of useState\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(\"[RevisionFloat] 🎯 Component Rendered\");\r\n  // ✅ Use shallowEqual to prevent unnecessary re-renders\r\n  const { cardData, parentDetails, isDropped, initialDraggedData } =\r\n    useSelector(\r\n      (state) => ({\r\n        cardData: state.droppedObject.droppedObjectData.cardData,\r\n        parentDetails: state.droppedObject.droppedObjectData.parentDetails,\r\n        isDropped: state.droppedObject.isDropped,\r\n        initialDraggedData:\r\n          state.droppedObject.droppedObjectData.initialDraggedData,\r\n      }),\r\n      shallowEqual // ✅ Ensures Redux only re-renders when values actually change\r\n    );\r\n  console.log(\"[RevisionFloat] 🏪 Redux State - cardData:\", cardData);\r\n  console.log(\"[RevisionFloat] 🏪 Redux State - parentDetails:\", parentDetails);\r\n\r\n  // ✅ Ensure droppable area is only initialized **once**\r\n  const hasInitializedDroppable = useRef(false);\r\n  useEffect(() => {\r\n    if (!isDropped && !hasInitializedDroppable.current) {\r\n      console.log(\"[RevisionFloat] 🔄 Initializing droppable area...\");\r\n      initializeDroppableArea();\r\n      hasInitializedDroppable.current = true; // ✅ Ensure it runs only once\r\n    }\r\n  }, [isDropped, initializeDroppableArea]);\r\n\r\n  // ✅ Memoize tableData (Only re-run if parentDetails change)\r\n  const optimizedTableData = useMemo(\r\n    () => getTableData(parentDetails, cardData),\r\n    [parentDetails, cardData]\r\n  );\r\n\r\n  // ✅ Prevent unnecessary re-renders by checking for data changes\r\n  useEffect(() => {\r\n    if (optimizedTableData.length > 0) {\r\n      console.log(\r\n        \"[RevisionFloat] 📊 optimizedTableData Updated:\",\r\n        optimizedTableData\r\n      );\r\n    }\r\n  }, [optimizedTableData]);\r\n\r\n  // ✅ Memoize cardData (Avoid recalculations unless cardData changes)\r\n  const optimizedCardData = useMemo(() => getCardData(cardData), [cardData]);\r\n\r\n  // ✅ Reset state only when needed\r\n  const handleHomeClick = useCallback(() => {\r\n    console.log(\r\n      \"[handleHomeClick] 🏠 Home icon clicked. Resetting droppable area...\"\r\n    );\r\n\r\n    if (!isDropped) {\r\n      console.log(\r\n        \"[handleHomeClick] 🚫 Already reset. Skipping unnecessary updates.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // ✅ Only reinitialize if necessary\r\n    if (!initialDraggedData.length) {\r\n      console.log(\"[handleHomeClick] 🔄 Reinitializing droppable area...\");\r\n      initializeDroppableArea();\r\n    }\r\n\r\n    // ✅ Reset Redux state only if needed\r\n    dispatch(setIsDropped(false));\r\n\r\n    if (cardData || parentDetails.length || initialDraggedData.length) {\r\n      console.log(\"[handleHomeClick] 🗑 Dispatching reset action...\");\r\n      dispatch(\r\n        setDroppedObjectData({\r\n          cardData: {},\r\n          parentDetails: [],\r\n          initialDraggedData: [],\r\n        })\r\n      );\r\n    } else {\r\n      console.log(\r\n        \"[handleHomeClick] 🚫 State already cleared. Skipping dispatch.\"\r\n      );\r\n    }\r\n\r\n    console.log(\"[handleHomeClick] ✅ Reset complete.\");\r\n  }, [\r\n    dispatch,\r\n    initializeDroppableArea,\r\n    isDropped,\r\n    initialDraggedData,\r\n    cardData,\r\n    parentDetails,\r\n  ]);\r\n\r\n  // ✅ Memoize filtered columns\r\n  const filteredColumns = useMemo(() => {\r\n    if (cardData?.Type === \"Document\") {\r\n      return tableColumns;\r\n    } else {\r\n      return tableColumns.filter(\r\n        (column) => column.accessorKey !== \"relationship\"\r\n      );\r\n    }\r\n  }, [cardData]);\r\n  console.log(\"[RevisionFloat] ✅ Component Updated\");\r\n\r\n  return (\r\n    <>\r\n      {!isDropped && !loading && <DragAndDropComponent />}\r\n      {loading && <Loader />}\r\n      {isDropped && (\r\n        <>\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex\">\r\n              <div className=\"p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {optimizedCardData && (\r\n                <CardWithDragAndDrop data={optimizedCardData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {optimizedTableData.length > 0 ? (\r\n            <div className=\"wrapper-cta\">\r\n              <RevisionFloatToolbarNativeCta />\r\n              <ReusableTable\r\n                key={tableKey.current}\r\n                data={optimizedTableData}\r\n                columns={filteredColumns}\r\n                widgetType=\"Revision_FLoat_Widget\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-data-banner\">No Parent object(s) found</div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevisionFloat;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport RevisionFloat from \"./pages/revisionFloat/revisionFloat\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle-munish\";\r\n\r\n// Connect to the WebSocket server\r\n// const socket = io(\"http://localhost:9090\");\r\n\r\n// socket.on(\"connect\", () => {\r\n//   console.log(\"Connected to Dev Server ✅\");\r\n// });\r\n\r\n// socket.on(\"filech\", () => {\r\n//   console.log(\"File Changed. Reloading...\");\r\n//   window.location.reload();\r\n// });\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <WidgetLifecycle />\r\n        <RevisionFloat />\r\n     \r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      console.log(\r\n        \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      );\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n  // When the widget fires the onRefresh event, reload the page.\r\n  // window.widget.addEvent(\"onRefresh\", () => {\r\n  //   console.log(\"[index.js] onRefresh event fired. Reloading page.\");\r\n  //   // window.location.reload();\r\n\r\n  // });\r\n\r\n  // Log a message when the widget's preferences have been edited.\r\n  // window.widget.addEvent(\"endEdit\", () => {\r\n  //   console.log(\"Preferences have been edited\");\r\n  // });\r\n}\r\n"],"names":["CheckmarkCell","_jsx","FontAwesomeIcon","icon","faCheck","className","CrossmarkCell","faXmark","tableColumns","accessorKey","header","columnPinning","cell","_ref","getValue","WidgetLifecycle","handleDrop","useDroppableArea","showSuccessToast","showErrorToast","useToast","hasOnRefreshRun","useRef","console","log","useEffect","window","widget","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","trace","some","line","includes","isAutoTriggeredRefresh","Error","stack","split","warn","current","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","data","items","length","refreshWidgetData","MSG_REFRESH_SUCCESS","error","MSG_REFRESH_ERROR","RevisionFloatToolbarNativeCta","replaceRevisions","useRevisions","useSelector","state","selectedTableRows","children","CustomButton","variant","size","text","onClick","_droppedObjectData$pa","MSG_NO_ROWS","allParents","parentDetails","selectedRows","filter","row","MSG_NO_REPLACE","selectedParents","map","find","parent","userEmail","PlatformAPI","loadPlatformAPI","getUser","email","getUserEmail","droppedData","cardData","success","RevisionFloat","initializeDroppableArea","loading","tableKey","dispatch","useDispatch","isDropped","shallowEqual","hasInitializedDroppable","optimizedTableData","useMemo","getTableData","Array","isArray","_objectSpread","EIN","Title","Description","Type","Revision","connectedChildRev","toBeChildRevConnected","State","Owner","Collabspace","relationship","optimizedCardData","title","type","owner","imageURL","getCardData","handleHomeClick","useCallback","setIsDropped","setDroppedObjectData","filteredColumns","column","_jsxs","_Fragment","DragAndDropComponent","Loader","Image","src","alt","CardWithDragAndDrop","ReusableTable","columns","widgetType","root","hasOnLoadRun","_window$widget","_window$widget$body","requirejs","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","Provider","ToastContainer","start"],"sourceRoot":""}